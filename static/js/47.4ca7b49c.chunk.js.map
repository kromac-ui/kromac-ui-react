{"version":3,"sources":["utils/utils.js","components/story/Card/storyProps/cardClassicProps.js","components/story/Card/storyProps/cardImageProps.js","components/story/Card/storyProps/cardRevealProps.js","components/story/Card/storyProps/cardInfoProps.js","components/story/Card/storyProps/cardHorizontalProps.js","components/story/Card/storyProps/cardPolygonProps.js","components/story/Card/storyProps/cardTeamProps.js","components/story/Card/storyProps/cardPercentageProps.js","components/story/Card/Card.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","style","Math","ceil","i","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","push","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","cardClassicProps","cardProps","cardType","image","title","text","expanded","componentText","className","importType","propsDescription","name","values","description","subTitle","size","notes","shape","profession","redes","url","progressColor","progress","Preview","lazy","Card","Spinner","cardComponents","CardStory","location","useEffect","document","window","scrollTo","cardImageProps","cardHorizontalProps","cardRevealProps","cardInfoProps","cardTeamProps","cardPolygonProps","cardPercentageProps","cardToShow","componentsRealated","fallback"],"mappings":"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","file":"static/js/47.4ca7b49c.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\r\nimport data from \"./components.json\";\r\n\r\nexport const determinateColor = color => {\r\n  switch (color) {\r\n    case \"transparent\":\r\n      return color;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const initialSizeProps = {};\r\n\r\nexport const addChip = (type, index) => {\r\n  if (type.includes(\"default\")) {\r\n    const defaultChip = type.replace(\"default\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <b>default </b>\r\n        <Chip>\r\n          {defaultChip}\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  if (type.includes(\"Required\")) {\r\n    const requiredChip = type.replace(\"Required\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <Chip>\r\n          {requiredChip}\r\n        </Chip>\r\n        <Chip>\r\n          <b>Required </b>\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Chip key={index}>\r\n      {type}\r\n    </Chip>\r\n  );\r\n};\r\n\r\nexport const borderStyle = (cardColor, border = false) =>\r\n  cardColor === \"transparent\" || border\r\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\r\n    : {};\r\n\r\nexport const bgStyleByProps = cardColor => ({\r\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\r\n  color: \"#fff\"\r\n});\r\n\r\nexport const styleCentered = isCentered => {\r\n  return isCentered\r\n    ? {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const getComponentsRelated = component => {\r\n  return data.find(c => c.component === component).subComponents;\r\n};\r\n\r\nexport const sortByLength = words => {\r\n  return words.sort((a, b) => b.length - a.length);\r\n};\r\n\r\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\r\n  if (itemActive.item === item) {\r\n    return \"active\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const templateGenerator = (images, template) => {\r\n  const rowLong = images.reduce(\r\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\r\n    0\r\n  );\r\n  const colLong = images.reduce(\r\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\r\n    0\r\n  );\r\n  const noRowCol = images.filter(\r\n    noRC => noRC.row === undefined && noRC.col === undefined\r\n  ).length;\r\n\r\n  const long = rowLong + colLong + noRowCol;\r\n  let nroRows = 0;\r\n  let nroCols = 0;\r\n  let style = \"\";\r\n\r\n  if (template === \"lg\") {\r\n    nroRows = Math.ceil(long / 4);\r\n    nroCols = 4;\r\n  }\r\n  if (template === \"md\") {\r\n    nroRows = Math.ceil(long / 2);\r\n    nroCols = 2;\r\n  }\r\n  if (template === \"sm\") {\r\n    return {};\r\n  }\r\n\r\n  for (let i = 0; i < nroRows; i++) {\r\n    style = style + `\"`;\r\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\r\n    if (template === \"lg\") {\r\n      style = style + `\" 33.33vh `;\r\n    }\r\n    if (template === \"md\") {\r\n      style = style + `\" 250px `;\r\n    }\r\n  }\r\n  return style;\r\n};\r\n\r\nexport const widthCalculator = width => {\r\n  let tag = \"\";\r\n  if (width > 768) tag = \"lg\";\r\n  if (width <= 768) tag = \"md\";\r\n  if (width <= 550) tag = \"sm\";\r\n  return tag;\r\n};\r\n\r\nexport const rowColGenerator = item => {\r\n  const { col, row } = item;\r\n  const style = {};\r\n  if (row) style.gridRow = `span ${row}`;\r\n  if (col) style.gridColumn = `span ${col}`;\r\n  return style;\r\n};\r\n\r\nexport const markTypeRow = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    return \"par\";\r\n  }\r\n  if (key === 0) {\r\n    return \"impar offset-md-2\";\r\n  }\r\n  return \"impar\";\r\n};\r\n\r\nexport const markAsLastImageImgPar = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    if (key === 2) {\r\n      return \"last\";\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const markAsOnlyImageRowImpar = count => {\r\n  if (count === 1) {\r\n    return \"special\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const rowColMaker = images => {\r\n  const numberRows = Math.ceil(images.length / 3);\r\n  const numberRows2 = Math.ceil(images.length / 2);\r\n  const rowAvg = (numberRows + numberRows2) / 2;\r\n  const rows = [];\r\n  let imgs = [];\r\n  let j = 0;\r\n\r\n  for (let i = 0; i < rowAvg; i++) {\r\n    imgs = [];\r\n    if (i % 2 === 0) {\r\n      for (let m = 0; m < 3; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let m = 0; m < 2; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    if (imgs.length > 0) {\r\n      rows.push(imgs);\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nexport const inactivateIonIcon = (number, indicator, long) => {\r\n  if (indicator === \"left\") {\r\n    if (number === 0) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  } else {\r\n    if (number === long) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeDocumentTitle = ({ component, state }) => {\r\n  return `Kromac UI: ${component} ${state}`;\r\n};\r\n","const subTitle = \"Card Classic\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"classic\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`,\r\n  expanded: true\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab\">expanded</span>=<span>{`{`}</span>\r\n      <span className=\"var\">true</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Card&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default md`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Card content size.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"expanded\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description:\r\n      \"Prop to expand the card to show all the text when this is too long.\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Image\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"image\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"image\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react\">/&gt;</span>\r\n      <br />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"image\",\r\n      \"default classic\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Reveal\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"reveal\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/05/10/22/56/bird-3389053_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"reveal\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Card&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"reveal\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Info\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"info\",\r\n  size: \"lg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged.`,\r\n  color: \"red\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"info\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        color\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Card&gt;</span>\r\n      <br />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"info\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default md`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Card content size.\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [`default color`, \"transparent\", \"color\"],\r\n    description: \"Sets shape of the card.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default transparent`],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Horizontal\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\nconst notes = `\r\n<p>\r\nThis card occupies 100% of the width wrapper.\r\n</p>\r\n`;\r\n\r\nconst cardProps = {\r\n  cardType: \"horizontal\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"horizontal\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Card&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"horizontal\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"imageSide\",\r\n    type: \"string\",\r\n    values: [`default left`, \"right\", \"left\"],\r\n    description: \"Side where the image will be display in the Card.\"\r\n  },\r\n  {\r\n    name: \"reveal\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: 'Adds the \"show more\" to reveal the card content.'\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Polygon\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"polygon\",\r\n  image: \"https://cdn.pixabay.com/photo/2016/07/15/16/50/man-1519667_1280.jpg\",\r\n  name: \"Card Title\",\r\n  color: \"red\",\r\n  shape: \"hexagon\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"polygon\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">name</span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        color\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        shape\r\n      </span>=<span className=\"string\">\"hexagon\"</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Card&gt;</span>\r\n      <br />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"polygon\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"name\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the person name.\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [\r\n      `default hexagon`,\r\n      \"hexagon\",\r\n      \"rhombus\",\r\n      \"pentagon\",\r\n      \"heptagon\",\r\n      \"octagon\",\r\n      \"bevel\",\r\n      \"circle\"\r\n    ],\r\n    description: \"Sets Sard's polygon shape.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Team\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\nconst notes = `\r\n  The <div class=\"chip\">redes</div> prop value format must be equals as that shown in the implementation.\r\n`;\r\n\r\nconst cardProps = {\r\n  cardType: \"team\",\r\n  image: \"https://cdn.pixabay.com/photo/2016/07/15/16/49/man-1519665_1280.jpg\",\r\n  name: \"Card name\",\r\n  profession: \"Card profession\",\r\n  redes: [\r\n    { name: \"facebook\", url: \"#\" },\r\n    { name: \"instagram\", url: \"#\" },\r\n    { name: \"linkedin\", url: \"#\" },\r\n    { name: \"twitter\", url: \"#\" }\r\n  ],\r\n  color: \"#154360\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"team\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">name</span>=<span className=\"string\">\"Card name\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        profession\r\n      </span>=<span className=\"string\">\"Card profession\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        color\r\n      </span>=<span className=\"string\">\"#154360\"</span>\r\n      <br />\r\n      <span className=\"component tab\">redes</span>=<span>{`{`}</span>\r\n      <span className=\"import\">[</span>\r\n      <br />\r\n      <span className=\"tab2\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"facebook\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab2\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"instagram\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab2\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"linkedin\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab2\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"twitter\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"import tab\">]</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react\">/&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"team\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image url.\"\r\n  },\r\n  {\r\n    name: \"name\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the person's name.\"\r\n  },\r\n  {\r\n    name: \"profession\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the person's profession.\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [`default info`, \"summary\", \"info\"],\r\n    description: \"Sets Card shape.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Sets image position to be displayed in the card.\"\r\n  },\r\n  {\r\n    name: \"redes\",\r\n    type: \"array of object\",\r\n    values: [\r\n      \"facebook\",\r\n      \"instagram\",\r\n      \"linkedin\",\r\n      \"twitter\",\r\n      \"twitch\",\r\n      \"youtube\"\r\n    ],\r\n    description: `Object array of social networks names and urls.`\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description:\r\n      'Card content, you can write html code inside. (this one will only works when the <shape> prop is \"summary\")'\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Percentage\";\r\nconst importType = `import Card from \"kromac-ui/dist/Card\";`;\r\n\r\nconst cardProps = {\r\n  cardType: \"percentage\",\r\n  title: \"Card Title\",\r\n  cardColor: \"red\",\r\n  progressColor: \"#01E735\",\r\n  progress: 85\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"percentage\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        cardColor\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        progressColor\r\n      </span>=<span className=\"string\">\"#01E735\"</span>\r\n      <br />\r\n      <span className=\"component tab\">progress</span>=<span>{`{`}</span>\r\n      <span className=\"text\">85</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react\">/&gt;</span>\r\n      <br />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"percentage\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"team\",\r\n      \"polygon\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Text that will be displayed as the Card's title.\"\r\n  },\r\n  {\r\n    name: \"progress\",\r\n    type: \"number Required\",\r\n    values: [],\r\n    description: \"Displays progress as a percentage.\"\r\n  },\r\n  {\r\n    name: \"cardColor\",\r\n    type: \"string\",\r\n    values: [`default transparent`],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"progressColor\",\r\n    type: \"string\",\r\n    values: [`default #D53DC4`],\r\n    description: \"Sets progress color.\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  cardProps,\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default cardClassicProps;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport cardClassicProps from \"./storyProps/cardClassicProps\";\r\nimport cardImageProps from \"./storyProps/cardImageProps\";\r\nimport cardRevealProps from \"./storyProps/cardRevealProps\";\r\nimport cardInfoProps from \"./storyProps/cardInfoProps\";\r\nimport cardHorizontalProps from \"./storyProps/cardHorizontalProps\";\r\nimport cardPolygonProps from \"./storyProps/cardPolygonProps\";\r\nimport cardTeamProps from \"./storyProps/cardTeamProps\";\r\nimport cardPercentageProps from \"./storyProps/cardPercentageProps\";\r\nimport {\r\n  changeDocumentTitle,\r\n  getComponentsRelated\r\n} from \"../../../utils/utils\";\r\n\r\nconst Preview = lazy(() => import(\"../../Preview\"));\r\nconst Card = lazy(() => import(\"./Card\"));\r\nconst Spinner = lazy(() => import(\"../../lib/Spinner\"));\r\n\r\nconst cardComponents = getComponentsRelated(\"card\");\r\n\r\nconst cardToShow = cardType => {\r\n  switch (cardType) {\r\n    case \"image\":\r\n      return cardImageProps;\r\n    case \"horizontal\":\r\n      return cardHorizontalProps;\r\n    case \"reveal\":\r\n      return cardRevealProps;\r\n    case \"info\":\r\n      return cardInfoProps;\r\n    case \"team\":\r\n      return cardTeamProps;\r\n    case \"polygon\":\r\n      return cardPolygonProps;\r\n    case \"percentage\":\r\n      return cardPercentageProps;\r\n    default:\r\n      return cardClassicProps;\r\n  }\r\n};\r\n\r\nconst CardStory = ({ location: { state = \"classic\" } }) => {\r\n  useEffect(\r\n    () => {\r\n      document.title = changeDocumentTitle({ component: \"Card\", state });\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [state]\r\n  );\r\n  const cardProps = cardToShow(state);\r\n  return (\r\n    <div>\r\n      <Preview\r\n        title=\"Card\"\r\n        subTitle={cardProps.subTitle}\r\n        description={cardProps.description}\r\n        importType={cardProps.importType}\r\n        propsDescription={cardProps.propsDescription}\r\n        notes={cardProps.notes}\r\n        componentsRealated={cardComponents}\r\n      >\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"center\">\r\n              <h4>Loading implementation</h4>\r\n              <Spinner />\r\n            </div>\r\n          }\r\n        >\r\n          <Card\r\n            cardProps={cardProps.cardProps}\r\n            componentText={cardProps.componentText}\r\n          />\r\n        </Suspense>\r\n      </Preview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardStory;\r\n"],"sourceRoot":""}