{"version":3,"sources":["utils/utils.js","components/story/Banner/storyProps/bannerClassicProps.js","components/story/Banner/storyProps/bannerImageProps.js","components/story/Banner/storyProps/bannerTextProps.js","components/story/Banner/Banner.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","determinateIcon","red","className","spanGenerator","loops","spans","i","style","push","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","Math","ceil","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","bannersProps","subTitle","importType","bannerProps","image","height","overlay","propsDescription","name","values","description","componentText","notes","bannerType","title","Preview","lazy","Banner","Spinner","bannerComponents","BannerHistory","location","useEffect","document","window","scrollTo","bannerImageProps","bannerTextProps","bannerClassicProps","bannerToShow","componentsRealated","fallback"],"mappings":"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","file":"static/js/71.a05b541c.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\nimport data from \"./components.json\";\n\nexport const determinateColor = color => {\n  switch (color) {\n    case \"transparent\":\n      return color;\n    default:\n      return \"\";\n  }\n};\n\nexport const initialSizeProps = {};\n\nexport const addChip = (type, index) => {\n  if (type.includes(\"default\")) {\n    const defaultChip = type.replace(\"default\", \"\");\n    return (\n      <div key={index}>\n        <b>default </b>\n        <Chip>\n          {defaultChip}\n        </Chip>\n      </div>\n    );\n  }\n  if (type.includes(\"Required\")) {\n    const requiredChip = type.replace(\"Required\", \"\");\n    return (\n      <div key={index}>\n        <Chip>\n          {requiredChip}\n        </Chip>\n        <Chip>\n          <b>Required </b>\n        </Chip>\n      </div>\n    );\n  }\n  return (\n    <Chip key={index}>\n      {type}\n    </Chip>\n  );\n};\n\nexport const borderStyle = (cardColor, border) =>\n  cardColor === \"transparent\" || border\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\n    : {};\n\nexport const bgStyleByProps = cardColor => ({\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\n  color: \"#fff\"\n});\n\nexport const determinateIcon = red => {\n  switch (red) {\n    case \"facebook\":\n      return <i className=\"fab fa-facebook-f\" />;\n    case \"instagram\":\n      return <i className=\"fab fa-instagram\" />;\n    case \"linkedin\":\n      return <i className=\"fab fa-linkedin-in\" />;\n    case \"twitter\":\n      return <i className=\"fab fa-twitter\" />;\n    case \"twitch\":\n      return <i className=\"fab fa-twitch\" />;\n    case \"youtube\":\n      return <i className=\"fab fa-youtube\" />;\n    default:\n      return;\n  }\n};\n\nexport const spanGenerator = loops => {\n  const spans = [];\n  for (let i = 1; i <= loops; i++) {\n    var style = { \"--i\": i };\n    spans.push(<span key={i} style={style} />);\n  }\n  return spans;\n};\n\nexport const styleCentered = isCentered => {\n  return isCentered\n    ? {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }\n    : {};\n};\n\nexport const getComponentsRelated = component => {\n  return data.find(c => c.component === component).subComponents;\n};\n\nexport const sortByLength = words => {\n  return words.sort((a, b) => b.length - a.length);\n};\n\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\n  if (itemActive.item === item) {\n    return \"active\";\n  }\n  return \"\";\n};\n\nexport const templateGenerator = (images, template) => {\n  const rowLong = images.reduce(\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\n    0\n  );\n  const colLong = images.reduce(\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\n    0\n  );\n  const noRowCol = images.filter(\n    noRC => noRC.row === undefined && noRC.col === undefined\n  ).length;\n\n  const long = rowLong + colLong + noRowCol;\n  let nroRows = 0;\n  let nroCols = 0;\n  let style = \"\";\n\n  if (template === \"lg\") {\n    nroRows = Math.ceil(long / 4);\n    nroCols = 4;\n  }\n  if (template === \"md\") {\n    nroRows = Math.ceil(long / 2);\n    nroCols = 2;\n  }\n  if (template === \"sm\") {\n    return {};\n  }\n\n  for (let i = 0; i < nroRows; i++) {\n    style = style + `\"`;\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\n    if (template === \"lg\") {\n      style = style + `\" 33.33vh `;\n    }\n    if (template === \"md\") {\n      style = style + `\" 250px `;\n    }\n  }\n  return style;\n};\n\nexport const widthCalculator = width => {\n  let tag = \"\";\n  if (width > 768) tag = \"lg\";\n  if (width <= 768) tag = \"md\";\n  if (width <= 550) tag = \"sm\";\n  return tag;\n};\n\nexport const rowColGenerator = item => {\n  const { col, row } = item;\n  const style = {};\n  if (row) style.gridRow = `span ${row}`;\n  if (col) style.gridColumn = `span ${col}`;\n  return style;\n};\n\nexport const markTypeRow = (index, key) => {\n  if (index % 2 === 0) {\n    return \"par\";\n  }\n  if (key === 0) {\n    return \"impar offset-md-2\";\n  }\n  return \"impar\";\n};\n\nexport const markAsLastImageImgPar = (index, key) => {\n  if (index % 2 === 0) {\n    if (key === 2) {\n      return \"last\";\n    }\n  }\n  return \"\";\n};\n\nexport const markAsOnlyImageRowImpar = count => {\n  if (count === 1) {\n    return \"special\";\n  }\n  return \"\";\n};\n\nexport const rowColMaker = images => {\n  const numberRows = Math.ceil(images.length / 3);\n  const numberRows2 = Math.ceil(images.length / 2);\n  const rowAvg = (numberRows + numberRows2) / 2;\n  const rows = [];\n  let imgs = [];\n  let j = 0;\n\n  for (let i = 0; i < rowAvg; i++) {\n    imgs = [];\n    if (i % 2 === 0) {\n      for (let m = 0; m < 3; m++) {\n        if (images[j]) {\n          imgs.push(images[j]);\n          j++;\n        }\n      }\n    } else {\n      for (let m = 0; m < 2; m++) {\n        if (images[j]) {\n          imgs.push(images[j]);\n          j++;\n        }\n      }\n    }\n    if (imgs.length > 0) {\n      rows.push(imgs);\n    }\n  }\n  return rows;\n};\n\nexport const inactivateIonIcon = (number, indicator, long) => {\n  if (indicator === \"left\") {\n    if (number === 0) {\n      return { pointerEvents: \"none\", color: \"#ccc\" };\n    }\n  } else {\n    if (number === long) {\n      return { pointerEvents: \"none\", color: \"#ccc\" };\n    }\n  }\n};\n\nexport const changeDocumentTitle = ({ component, state }) => {\n  return `Kromac UI: ${component} ${state}`;\n};\n","const subTitle = \"Banner classic\";\nconst importType = `import Banner from \"kromac/lib/Banner\";`;\nconst notes = `\n  <p>\n    for a better expirience, the image must be png and transparent background like the example.\n  </p>\n  <h6>Recomendations:</h6>\n  if you use an rectangular (horizontally) and you wanna use the prop \n  <div class=\"chip\">overlay</div> \n  also use the prop <div class=\"chip\">isBottom</div> to align the imagen at bottom side of ther banner.\n \n`;\n\nconst bannerProps = {\n  image:\n    \"https://cdn.pixabay.com/photo/2018/04/22/23/18/skeleton-3342754_1280.png\",\n  height: \"300px\",\n  overlay: true\n};\n\nconst componentText = (\n  <div className=\"implementation kromac-scroll-bg-dark\">\n    <p>\n      <span className=\"var\">{\"<div>\"}</span>\n      <br />\n      <span className=\"react tab\">{\"<Banner\"}</span>\n      <br />\n      <span className=\"component tab2\">{\"image\"}</span>\n      =\n      <span className=\"string\">{`\"image.png\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"height\"}</span>\n      =\n      <span className=\"string\">{`\"300px\"`}</span>\n      <br />\n      <span className=\"component tab2\">{`overlay`}</span>\n      <br />\n      <span className=\"react tab\">{\">\"}</span>\n      <br />\n      <span className=\"var tab2\">{`<h1 `}</span>\n      <span className=\"component\">{`className`}</span>\n      =\n      <span className=\"string\">{`\"text-bg-light\"`}</span>\n      <span className=\"var\">{`>`}</span>\n      <br />\n      <span className=\"text tab3\">Title Here</span>\n      <br />\n      <span className=\"var tab2\">{`</h1>`}</span>\n      <br />\n      <span className=\"var tab2\">{`<p `}</span>\n      <span className=\"component\">{`className`}</span>\n      =\n      <span className=\"string\">{`\"text-bg-light\"`}</span>\n      <span className=\"var\">{`>`}</span>\n      <br />\n      <span className=\"text tab3\">Some text here</span>\n      <br />\n      <span className=\"var tab2\">{`</p>`}</span>\n      <br />\n      <span className=\"react tab\">{\"</Banner>\"}</span>\n      <br />\n      <span className=\"var\">{\"</div>\"}</span>\n    </p>\n  </div>\n);\n\nconst propsDescription = [\n  {\n    name: \"bannerType\",\n    type: \"string\",\n    values: [\"default classic\", \"classic\", \"image\", \"text\"],\n    description: \"Banner type\"\n  },\n  {\n    name: \"image\",\n    type: \"string Required\",\n    values: [],\n    description: \"banner image\"\n  },\n  {\n    name: \"background\",\n    type: \"string\",\n    values: [\"default #000\"],\n    description: \"background color of the banner\"\n  },\n  {\n    name: \"color\",\n    type: \"string\",\n    values: [],\n    description: \"font color\"\n  },\n  {\n    name: \"height\",\n    type: \"string\",\n    values: [\"default auto\"],\n    description: \"banner height\"\n  },\n  {\n    name: \"order\",\n    type: \"string\",\n    values: [\"default right\"],\n    description: \"side to appear the image\"\n  },\n  {\n    name: \"overlay\",\n    type: \"bool\",\n    values: [\"default false\"],\n    description: \"this prop make the image overlay the banner height\"\n  },\n  {\n    name: \"isBottom\",\n    type: \"bool\",\n    values: [\"default false\"],\n    description:\n      \"this prop align the image to bottom side, but just work with overlay prop as true\"\n  },\n  {\n    name: \"textAlign\",\n    type: \"string\",\n    values: [\"default center\"],\n    description: \"text align\"\n  },\n  {\n    name: \"children\",\n    type: \"any\",\n    values: [],\n    description: \"text you want to appear as banner text\"\n  }\n];\n\nconst bannersProps = {\n  subTitle,\n  importType,\n  bannerProps,\n  propsDescription,\n  componentText,\n  notes\n};\n\nexport default bannersProps;\n","const subTitle = \"Banner image\";\nconst importType = `import Banner from \"kromac/lib/Banner\";`;\n\nconst bannerProps = {\n  bannerType: \"image\",\n  image:\n    \"https://cdn.pixabay.com/photo/2018/07/05/22/16/panorama-3519309_1280.jpg\",\n  height: \"300px\"\n};\n\nconst componentText = (\n  <div className=\"implementation kromac-scroll-bg-dark\">\n    <p>\n      <span className=\"var\">{\"<div>\"}</span>\n      <br />\n      <span className=\"react tab\">{\"<Banner\"}</span>\n      <br />\n      <span className=\"component tab2\">{\"bannerType\"}</span>\n      =\n      <span className=\"string\">{`\"image\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"image\"}</span>\n      =\n      <span className=\"string\">{`\"image.png\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"height\"}</span>\n      =\n      <span className=\"string\">{`\"300px\"`}</span>\n      <br />\n      <span className=\"react tab\">{\">\"}</span>\n      <br />\n      <span className=\"var tab2\">{`<h1 `}</span>\n      <span className=\"component\">{`className`}</span>\n      =\n      <span className=\"string\">{`\"text-bg-light\"`}</span>\n      <span className=\"var\">{`>`}</span>\n      <br />\n      <span className=\"text tab3\">Title Here</span>\n      <br />\n      <span className=\"var tab2\">{`</h1>`}</span>\n      <br />\n      <span className=\"var tab2\">{`<p `}</span>\n      <span className=\"component\">{`className`}</span>\n      =\n      <span className=\"string\">{`\"text-bg-light\"`}</span>\n      <span className=\"var\">{`>`}</span>\n      <br />\n      <span className=\"text tab3\">Some text here</span>\n      <br />\n      <span className=\"var tab2\">{`</p>`}</span>\n      <br />\n      <span className=\"react tab\">{\"</Banner>\"}</span>\n      <br />\n      <span className=\"var\">{\"</div>\"}</span>\n    </p>\n  </div>\n);\n\nconst propsDescription = [\n  {\n    name: \"bannerType\",\n    type: \"string\",\n    values: [\"image\", \"default classic\", \"text\", \"classic\"],\n    description: \"Banner type\"\n  },\n  {\n    name: \"image\",\n    type: \"string Required\",\n    values: [],\n    description: \"banner image\"\n  },\n  {\n    name: \"color\",\n    type: \"string\",\n    values: [\"default #fff\"],\n    description: \"font color\"\n  },\n  {\n    name: \"height\",\n    type: \"string\",\n    values: [\"default 500px\"],\n    description: \"banner height\"\n  },\n  {\n    name: \"attachment\",\n    type: \"string\",\n    values: [\"default fixed\"],\n    description: \"background attachment\"\n  },\n  {\n    name: \"children\",\n    type: \"any\",\n    values: [],\n    description: \"text you want to appear as banner text\"\n  }\n];\n\nconst bannersProps = {\n  subTitle,\n  importType,\n  bannerProps,\n  propsDescription,\n  componentText\n};\n\nexport default bannersProps;\n","const subTitle = \"Banner text\";\nconst importType = `import Banner from \"kromac/lib/Banner\";`;\n\nconst notes = `when the screen is <div class=\"chip\">767px</div> the title will centered and move to top`;\n\nconst bannerProps = {\n  bannerType: \"text\",\n  image:\n    \"https://images.pexels.com/photos/3075993/pexels-photo-3075993.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\n  height: \"500px\",\n  title: \"Some title here\"\n};\n\nconst componentText = (\n  <div className=\"implementation kromac-scroll-bg-dark\">\n    <p>\n      <span className=\"var\">{\"<div>\"}</span>\n      <br />\n      <span className=\"react tab\">{\"<Banner\"}</span>\n      <br />\n      <span className=\"component tab2\">{\"bannerType\"}</span>\n      =\n      <span className=\"string\">{`\"text\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"image\"}</span>\n      =\n      <span className=\"string\">{`\"image.png\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"title\"}</span>\n      =\n      <span className=\"string\">{`\"Some title here\"`}</span>\n      <br />\n      <span className=\"component tab2\">{\"height\"}</span>\n      =\n      <span className=\"string\">{`\"500px\"`}</span>\n      <br />\n      <span className=\"react tab\">{\"/>\"}</span>\n      <br />\n      <span className=\"var\">{\"</div>\"}</span>\n    </p>\n  </div>\n);\n\nconst propsDescription = [\n  {\n    name: \"bannerType\",\n    type: \"string\",\n    values: [\"text\", \"default classic\", \"image\", \"classic\"],\n    description: \"Banner type\"\n  },\n  {\n    name: \"title\",\n    type: \"string Required\",\n    values: [],\n    description: \"banner title\"\n  },\n  {\n    name: \"image\",\n    type: \"string Required\",\n    values: [],\n    description: \"banner image\"\n  },\n  {\n    name: \"bgTextColor\",\n    type: \"string\",\n    values: [],\n    description: `background text color (please do not send #000 or \"black\")`\n  },\n  {\n    name: \"height\",\n    type: \"string\",\n    values: [\"default 500px\"],\n    description: \"banner height\"\n  },\n  {\n    name: \"order\",\n    type: \"string\",\n    values: [\"default left\"],\n    description: \"side to appear the title\"\n  },\n  {\n    name: \"attachment\",\n    type: \"string\",\n    values: [],\n    description: \"background attachment\"\n  },\n  {\n    name: \"textAlign\",\n    type: \"string\",\n    values: [\"default center\"],\n    description: \"text align\"\n  },\n  {\n    name: \"bgPosition\",\n    type: \"string\",\n    values: [\"default center\"],\n    description: \"background align\"\n  }\n];\n\nconst bannersProps = {\n  subTitle,\n  importType,\n  bannerProps,\n  propsDescription,\n  componentText,\n  notes\n};\n\nexport default bannersProps;\n","import React, { lazy, Suspense, useEffect } from \"react\";\nimport bannerClassicProps from \"./storyProps/bannerClassicProps\";\nimport bannerImageProps from \"./storyProps/bannerImageProps\";\nimport bannerTextProps from \"./storyProps/bannerTextProps\";\nimport {\n  changeDocumentTitle,\n  getComponentsRelated\n} from \"../../../utils/utils\";\n\nconst Preview = lazy(() => import(\"../../Preview\"));\nconst Banner = lazy(() => import(\"./Banner\"));\nconst Spinner = lazy(() => import(\"../../lib/Spinner\"));\n\nconst bannerComponents = getComponentsRelated(\"banner\");\n\nconst bannerToShow = bannerType => {\n  switch (bannerType) {\n    case \"image\":\n      return bannerImageProps;\n    case \"text\":\n      return bannerTextProps;\n    default:\n      return bannerClassicProps;\n  }\n};\n\nconst BannerHistory = ({ location: { state = \"classic\" } }) => {\n  useEffect(\n    () => {\n      document.title = changeDocumentTitle({ component: \"Banner\", state });\n      window.scrollTo(0, 0);\n    },\n    [state]\n  );\n  const bannerProps = bannerToShow(state);\n  return (\n    <div>\n      <Preview\n        title=\"Banner\"\n        subTitle={bannerProps.subTitle}\n        description={bannerProps.description}\n        importType={bannerProps.importType}\n        propsDescription={bannerProps.propsDescription}\n        notes={bannerProps.notes}\n        componentsRealated={bannerComponents}\n      >\n        <Suspense\n          fallback={\n            <div className=\"center\">\n              <h4>Loading implementation</h4>\n              <Spinner />\n            </div>\n          }\n        >\n          <Banner\n            bannersProps={bannerProps.bannerProps}\n            componentText={bannerProps.componentText}\n          />\n        </Suspense>\n      </Preview>\n    </div>\n  );\n};\n\nexport default BannerHistory;\n"],"sourceRoot":""}