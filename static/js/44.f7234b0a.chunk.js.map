{"version":3,"sources":["components/lib/Button/Button.js"],"names":["Spinner","lazy","Button","color","buttonType","className","loading","disabled","onClick","children","spinnerClass","disabledClass","bgSpinner","bgColorInside"],"mappings":"yMAKMA,EAAUC,gBAAK,kBAAM,gCAqDZC,EAnDA,SAAC,GAQT,IAAD,IAPJC,aAOI,MAPI,UAOJ,MANJC,kBAMI,MANS,UAMT,MALJC,iBAKI,MALQ,GAKR,MAJJC,eAII,aAHJC,gBAGI,SAFJC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEMC,EAAeJ,EAAU,UAAY,GACrCK,EAAgBJ,EAAW,WAAa,GACxCK,EAA2B,YAAfR,EAA2B,OAAS,UAEtD,OACE,8BACE,yBACEG,SAAUA,EACVC,QAASA,EACTH,UAAS,qBAAgBF,EAAhB,YAAyBC,EAAzB,YAAuCO,GAHlD,UAKE,sBAAMN,UAAU,uBAChB,sBAAKA,UAAS,yBAAoBK,GAAlC,UACGJ,GAAW,cAACN,EAAD,CAASa,cAAeD,IACpC,mBAAGP,UAAS,UAAKA,GAAjB,SACGI","file":"static/js/44.f7234b0a.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\nimport PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport \"./style.scss\";\n\nconst Spinner = lazy(() => import(\"../Spinner\"));\n\nconst Button = ({\n  color = \"primary\",\n  buttonType = \"classic\",\n  className = \"\",\n  loading = false,\n  disabled = false,\n  onClick,\n  children\n}) => {\n  const spinnerClass = loading ? \"spinner\" : \"\";\n  const disabledClass = disabled ? \"disabled\" : \"\";\n  const bgSpinner = buttonType === \"classic\" ? \"#fff\" : \"#212f3c\";\n\n  return (\n    <div>\n      <button\n        disabled={disabled}\n        onClick={onClick}\n        className={`kromac-btn ${color} ${buttonType} ${disabledClass}`}\n      >\n        <span className=\"kromac-span-button\" />\n        <div className={`button-content ${spinnerClass}`}>\n          {loading && <Spinner bgColorInside={bgSpinner} />}\n          <p className={`${className}`}>\n            {children}\n          </p>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = exact({\n  buttonType: PropTypes.oneOf([\"classic\", \"neon\"]),\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"danger\",\n    \"info\",\n    \"dark\",\n    \"transparent\"\n  ]),\n  className: PropTypes.string,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any\n});\n\nexport default Button;\n"],"sourceRoot":""}