{"version":3,"sources":["components/lib/Button/Button.js"],"names":["Spinner","lazy","Button","color","buttonType","className","loading","disabled","onClick","children","spinnerClass","disabledClass","bgSpinner","bgColorInside"],"mappings":"mNAKMA,EAAUC,gBAAK,kBAAM,gCAqDZC,EAnDA,SAAC,GAQT,IAAD,IAPJC,aAOI,MAPI,UAOJ,MANJC,kBAMI,MANS,UAMT,MALJC,iBAKI,MALQ,GAKR,MAJJC,eAII,aAHJC,gBAGI,SAFJC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEMC,EAAeJ,EAAU,UAAY,GACrCK,EAAgBJ,EAAW,WAAa,GACxCK,EAA2B,YAAfR,EAA2B,OAAS,UAEtD,OACE,8BACE,yBACEG,SAAUA,EACVC,QAASA,EACTH,UAAS,qBAAgBF,EAAhB,YAAyBC,EAAzB,YAAuCO,GAHlD,UAKE,sBAAMN,UAAU,uBAChB,sBAAKA,UAAS,yBAAoBK,GAAlC,UACGJ,GAAW,cAACN,EAAD,CAASa,cAAeD,IACpC,mBAAGP,UAAS,UAAKA,GAAjB,SACGI","file":"static/js/10.4042447d.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport \"./Button.scss\";\r\n\r\nconst Spinner = lazy(() => import(\"../Spinner\"));\r\n\r\nconst Button = ({\r\n  color = \"primary\",\r\n  buttonType = \"classic\",\r\n  className = \"\",\r\n  loading = false,\r\n  disabled = false,\r\n  onClick,\r\n  children\r\n}) => {\r\n  const spinnerClass = loading ? \"spinner\" : \"\";\r\n  const disabledClass = disabled ? \"disabled\" : \"\";\r\n  const bgSpinner = buttonType === \"classic\" ? \"#fff\" : \"#212f3c\";\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        className={`kromac-btn ${color} ${buttonType} ${disabledClass}`}\r\n      >\r\n        <span className=\"kromac-span-button\" />\r\n        <div className={`button-content ${spinnerClass}`}>\r\n          {loading && <Spinner bgColorInside={bgSpinner} />}\r\n          <p className={`${className}`}>\r\n            {children}\r\n          </p>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = exact({\r\n  buttonType: PropTypes.oneOf([\"classic\", \"neon\"]),\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"dark\",\r\n    \"transparent\"\r\n  ]),\r\n  className: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.any\r\n});\r\n\r\nexport default Button;\r\n"],"sourceRoot":""}