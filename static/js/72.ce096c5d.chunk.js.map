{"version":3,"sources":["utils/utils.js","components/story/Card/storyProps/cardClassicProps.js","components/story/Card/storyProps/cardImageProps.js","components/story/Card/storyProps/cardRevealProps.js","components/story/Card/storyProps/cardInfoProps.js","components/story/Card/storyProps/cardHorizontalProps.js","components/story/Card/storyProps/cardPolygonProps.js","components/story/Card/storyProps/cardUserProps.js","components/story/Card/storyProps/cardPercentageProps.js","components/story/Card/Card.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","determinateIcon","red","className","spanGenerator","loops","spans","i","style","push","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","Math","ceil","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","cardClassicProps","subTitle","description","importType","notes","cardProps","cardType","image","title","text","expanded","propsDescription","name","values","componentText","size","shape","profession","redes","url","progressColor","progress","Preview","lazy","Card","Spinner","cardComponents","CardStory","location","useEffect","document","window","scrollTo","cardImageProps","cardHorizontalProps","cardRevealProps","cardInfoProps","cardUserProps","cardPolygonProps","cardPercentageProps","cardToShow","componentsRealated","fallback"],"mappings":"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","file":"static/js/72.ce096c5d.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\r\nimport data from \"./components.json\";\r\n\r\nexport const determinateColor = color => {\r\n  switch (color) {\r\n    case \"transparent\":\r\n      return color;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const initialSizeProps = {};\r\n\r\nexport const addChip = (type, index) => {\r\n  if (type.includes(\"default\")) {\r\n    const defaultChip = type.replace(\"default\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <b>default </b>\r\n        <Chip>\r\n          {defaultChip}\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  if (type.includes(\"Required\")) {\r\n    const requiredChip = type.replace(\"Required\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <Chip>\r\n          {requiredChip}\r\n        </Chip>\r\n        <Chip>\r\n          <b>Required </b>\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Chip key={index}>\r\n      {type}\r\n    </Chip>\r\n  );\r\n};\r\n\r\nexport const borderStyle = (cardColor, border) =>\r\n  cardColor === \"transparent\" || border\r\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\r\n    : {};\r\n\r\nexport const bgStyleByProps = cardColor => ({\r\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\r\n  color: \"#fff\"\r\n});\r\n\r\nexport const determinateIcon = red => {\r\n  switch (red) {\r\n    case \"facebook\":\r\n      return <i className=\"fab fa-facebook-f\" />;\r\n    case \"instagram\":\r\n      return <i className=\"fab fa-instagram\" />;\r\n    case \"linkedin\":\r\n      return <i className=\"fab fa-linkedin-in\" />;\r\n    case \"twitter\":\r\n      return <i className=\"fab fa-twitter\" />;\r\n    case \"twitch\":\r\n      return <i className=\"fab fa-twitch\" />;\r\n    case \"youtube\":\r\n      return <i className=\"fab fa-youtube\" />;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport const spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nexport const styleCentered = isCentered => {\r\n  return isCentered\r\n    ? {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const getComponentsRelated = component => {\r\n  return data.find(c => c.component === component).subComponents;\r\n};\r\n\r\nexport const sortByLength = words => {\r\n  return words.sort((a, b) => b.length - a.length);\r\n};\r\n\r\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\r\n  if (itemActive.item === item) {\r\n    return \"active\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const templateGenerator = (images, template) => {\r\n  const rowLong = images.reduce(\r\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\r\n    0\r\n  );\r\n  const colLong = images.reduce(\r\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\r\n    0\r\n  );\r\n  const noRowCol = images.filter(\r\n    noRC => noRC.row === undefined && noRC.col === undefined\r\n  ).length;\r\n\r\n  const long = rowLong + colLong + noRowCol;\r\n  let nroRows = 0;\r\n  let nroCols = 0;\r\n  let style = \"\";\r\n\r\n  if (template === \"lg\") {\r\n    nroRows = Math.ceil(long / 4);\r\n    nroCols = 4;\r\n  }\r\n  if (template === \"md\") {\r\n    nroRows = Math.ceil(long / 2);\r\n    nroCols = 2;\r\n  }\r\n  if (template === \"sm\") {\r\n    return {};\r\n  }\r\n\r\n  for (let i = 0; i < nroRows; i++) {\r\n    style = style + `\"`;\r\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\r\n    if (template === \"lg\") {\r\n      style = style + `\" 33.33vh `;\r\n    }\r\n    if (template === \"md\") {\r\n      style = style + `\" 250px `;\r\n    }\r\n  }\r\n  return style;\r\n};\r\n\r\nexport const widthCalculator = width => {\r\n  let tag = \"\";\r\n  if (width > 768) tag = \"lg\";\r\n  if (width <= 768) tag = \"md\";\r\n  if (width <= 550) tag = \"sm\";\r\n  return tag;\r\n};\r\n\r\nexport const rowColGenerator = item => {\r\n  const { col, row } = item;\r\n  const style = {};\r\n  if (row) style.gridRow = `span ${row}`;\r\n  if (col) style.gridColumn = `span ${col}`;\r\n  return style;\r\n};\r\n\r\nexport const markTypeRow = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    return \"par\";\r\n  }\r\n  if (key === 0) {\r\n    return \"impar offset-md-2\";\r\n  }\r\n  return \"impar\";\r\n};\r\n\r\nexport const markAsLastImageImgPar = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    if (key === 2) {\r\n      return \"last\";\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const markAsOnlyImageRowImpar = count => {\r\n  if (count === 1) {\r\n    return \"special\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const rowColMaker = images => {\r\n  const numberRows = Math.ceil(images.length / 3);\r\n  const numberRows2 = Math.ceil(images.length / 2);\r\n  const rowAvg = (numberRows + numberRows2) / 2;\r\n  const rows = [];\r\n  let imgs = [];\r\n  let j = 0;\r\n\r\n  for (let i = 0; i < rowAvg; i++) {\r\n    imgs = [];\r\n    if (i % 2 === 0) {\r\n      for (let m = 0; m < 3; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let m = 0; m < 2; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    if (imgs.length > 0) {\r\n      rows.push(imgs);\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nexport const inactivateIonIcon = (number, indicator, long) => {\r\n  if (indicator === \"left\") {\r\n    if (number === 0) {\r\n      return { pointerEvents: \"none\", color: \"#ccc\" };\r\n    }\r\n  } else {\r\n    if (number === long) {\r\n      return { pointerEvents: \"none\", color: \"#ccc\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeDocumentTitle = ({ component, state }) => {\r\n  return `Kromac UI: ${component} ${state}`;\r\n};\r\n","const subTitle = \"Card Classic\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"classic\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`,\r\n  expanded: true\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">expanded</span>=<span>{`{`}</span>\r\n      <span className=\"var\">true</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react tab3\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab4\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;/Card&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default md`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Card size\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Card caption color\"\r\n  },\r\n  {\r\n    name: \"border\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to add a border\"\r\n  },\r\n  {\r\n    name: \"expanded\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to expand the card to show all the text\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Image\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"image\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"image\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react tab3\">/&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"image\",\r\n      \"default classic\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"border\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to add a border\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Reveal\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"reveal\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/05/10/22/56/bird-3389053_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"reveal\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        name\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react tab3\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab4\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;/Card&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"reveal\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Card caption color\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Info\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"info\",\r\n  size: \"lg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged.`,\r\n  color: \"red\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"info\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        color\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"react tab3\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab4\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;/Card&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"info\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default md`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Card size\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [`default color`, \"transparent\", \"color\"],\r\n    description: \"Card caption color\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default transparent`],\r\n    description:\r\n      \"Card caption color, you can add any color en hex format or name\"\r\n  },\r\n  {\r\n    name: \"border\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to add a border\"\r\n  },\r\n  {\r\n    name: \"expanded\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to expand the card to show all the text\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Horizontal\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">lg=6</div>\r\n                <div class=\"chip\">md=12</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"horizontal\",\r\n  image: \"https://cdn.pixabay.com/photo/2018/09/23/18/30/drop-3698073_1280.jpg\",\r\n  title: \"Card Title\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"horizontal\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"react tab3\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab4\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;/Card&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"horizontal\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`, \"transparent\", \"#fff\"],\r\n    description: \"Card caption color\"\r\n  },\r\n  {\r\n    name: \"imageSide\",\r\n    type: \"string\",\r\n    values: [`default left`, \"right\", \"left\"],\r\n    description: \"side of the image\"\r\n  },\r\n  {\r\n    name: \"reveal\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to expand the card to show all the text\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Polygon\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"polygon\",\r\n  image: \"https://cdn.pixabay.com/photo/2016/07/15/16/50/man-1519667_1280.jpg\",\r\n  name: \"Card Title\",\r\n  color: \"red\",\r\n  shape: \"hexagon\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"polygon\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        name\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        color\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        shape\r\n      </span>=<span className=\"string\">\"hexagon\"</span>\r\n      <br />\r\n      <span className=\"react tab3\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab4\">&lt;p&gt;</span>\r\n      <span className=\"text\">Card text here...!</span>\r\n      <span className=\"var\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;/Card&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"polygon\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"name\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"card name appear into the card\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [\r\n      `default hexagon`,\r\n      \"hexagon\",\r\n      \"rhombus\",\r\n      \"pentagon\",\r\n      \"heptagon\",\r\n      \"octagon\",\r\n      \"bevel\",\r\n      \"circle\"\r\n    ],\r\n    description: \"Card shape\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`],\r\n    description: \"you can add any color in hex format or name\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card User\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"user\",\r\n  image: \"https://cdn.pixabay.com/photo/2016/07/15/16/49/man-1519665_1280.jpg\",\r\n  name: \"Card name\",\r\n  profession: \"Card profession\",\r\n  redes: [\r\n    { name: \"facebook\", url: \"#\" },\r\n    { name: \"instagram\", url: \"#\" },\r\n    { name: \"linkedin\", url: \"#\" },\r\n    { name: \"twitter\", url: \"#\" }\r\n  ],\r\n  color: \"#154360\",\r\n  text: `Lorem Ipsum is simply dummy text of the printing and typesetting\r\n        industry. Lorem Ipsum has been the industry's standard dummy\r\n        text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has\r\n        survived not only five centuries, but also the leap into\r\n        electronic typesetting, remaining essentially unchanged. It was\r\n        popularised in the 1960s with the release of Letraset sheets\r\n        containing Lorem Ipsum passages, and more recently with desktop\r\n        publishing software like Aldus PageMaker including versions of\r\n        Lorem Ipsum.`\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"user\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        name\r\n      </span>=<span className=\"string\">\"Card name\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        profession\r\n      </span>=<span className=\"string\">\"Card profession\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        color\r\n      </span>=<span className=\"string\">\"#154360\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">redes</span>=<span>{`{`}</span>\r\n      <span className=\"import\">[</span>\r\n      <br />\r\n      <span className=\"tab5\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"facebook\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab5\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"instagram\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab5\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"linkedin\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"tab5\">{`{ `}</span>\r\n      <span className=\"var\">name: </span>\r\n      <span className=\"string\">\"twitter\"</span>,<span className=\"var\"> url: </span>\r\n      <span className=\"string\">\"#\"</span>\r\n      <span>{` }`}</span>,<br />\r\n      <span className=\"import tab4\">]</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react tab3\">/&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"user\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"polygon\",\r\n      \"percentage\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Card image\"\r\n  },\r\n  {\r\n    name: \"name\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"user name appear into the card\"\r\n  },\r\n  {\r\n    name: \"profession\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"user profession\"\r\n  },\r\n  {\r\n    name: \"shape\",\r\n    type: \"string\",\r\n    values: [`default info`, \"summary\", \"info\"],\r\n    description: \"Card shape\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [`default #fff`],\r\n    description: \"you can add any color in hex format or name\"\r\n  },\r\n  {\r\n    name: \"border\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to add a border\"\r\n  },\r\n  {\r\n    name: \"imageFitPosition\",\r\n    type: \"string\",\r\n    values: [`default center`, \"top\", \"center\", \"bottom\"],\r\n    description: \"Prop to fit the image into the card\"\r\n  },\r\n  {\r\n    name: \"redes\",\r\n    type: \"array of object\",\r\n    values: [\r\n      \"facebook\",\r\n      \"instagram\",\r\n      \"linkedin\",\r\n      \"twitter\",\r\n      \"twitch\",\r\n      \"youtube\"\r\n    ],\r\n    description: `example: [{ name: \"facebook\", url: \"#\"}]`\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Card content, you can write html code inside\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","const subTitle = \"Card Percentage\";\r\nconst description = \"this component always must be wrappe by an Row Col\";\r\nconst importType = `import Card from \"kromac/lib/Card\";`;\r\nconst notes = `For better view please wrap the card into a bootstrap \r\n                <div class=\"chip\">Row</div> \r\n                <div class=\"chip\">Col</div>\r\n                and use\r\n                <div class=\"chip\">xl=3</div>\r\n                <div class=\"chip\">lg=4</div>\r\n                <div class=\"chip\">md=6</div>\r\n                <div class=\"chip\">xs=12</div>`;\r\n\r\nconst cardProps = {\r\n  cardType: \"percentage\",\r\n  title: \"Card Title\",\r\n  cardColor: \"red\",\r\n  progressColor: \"#01E735\",\r\n  progress: 85\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"var\">&lt;div&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;Row&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;Col </span>\r\n      <span className=\"component\">xl</span>=<span>{`{`}</span>\r\n      <span className=\"text\">3</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">lg</span>=<span>{`{`}</span>\r\n      <span className=\"text\">4</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">md</span>=<span>{`{`}</span>\r\n      <span className=\"text\">6</span>\r\n      <span>{`} `}</span>\r\n      <span className=\"component\">sm</span>=<span>{`{`}</span>\r\n      <span className=\"text\">12</span>\r\n      <span>{`}`}</span>\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"react tab3\">&lt;Card</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardType\r\n      </span>=<span className=\"string\">\"percentage\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        title\r\n      </span>=<span className=\"string\">\"Card title\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        cardColor\r\n      </span>=<span className=\"string\">\"red\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">\r\n        progressColor\r\n      </span>=<span className=\"string\">\"#01E735\"</span>\r\n      <br />\r\n      <span className=\"component tab4\">progress</span>=<span>{`{`}</span>\r\n      <span className=\"text\">85</span>\r\n      <span>{`}`}</span>\r\n      <br />\r\n      <span className=\"react tab3\">/&gt;</span>\r\n      <br />\r\n      <span className=\"react tab2\">&lt;/Col&gt;</span>\r\n      <br />\r\n      <span className=\"react tab\">&lt;/Row&gt;</span>\r\n      <br />\r\n      <span className=\"var\">&lt;/div&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"cardType\",\r\n    type: \"string\",\r\n    values: [\r\n      \"percentage\",\r\n      \"default classic\",\r\n      \"image\",\r\n      \"horizontal\",\r\n      \"reveal\",\r\n      \"info\",\r\n      \"user\",\r\n      \"polygon\",\r\n      \"classic\"\r\n    ],\r\n    description: \"Card type\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Card title appear into the card\"\r\n  },\r\n  {\r\n    name: \"progress\",\r\n    type: \"number Required\",\r\n    values: [],\r\n    description: \"progress\"\r\n  },\r\n  {\r\n    name: \"cardColor\",\r\n    type: \"string\",\r\n    values: [`default #transparent`],\r\n    description: \"Card color, you can add any color en hex format or name\"\r\n  },\r\n  {\r\n    name: \"progressColor\",\r\n    type: \"string\",\r\n    values: [`default #D53DC4`],\r\n    description: \"you can add any color en hex format or name\"\r\n  },\r\n  {\r\n    name: \"border\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description: \"Prop to add a border\"\r\n  }\r\n];\r\n\r\nconst cardClassicProps = {\r\n  subTitle,\r\n  description,\r\n  importType,\r\n  notes,\r\n  cardProps,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default cardClassicProps;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport cardClassicProps from \"./storyProps/cardClassicProps\";\r\nimport cardImageProps from \"./storyProps/cardImageProps\";\r\nimport cardRevealProps from \"./storyProps/cardRevealProps\";\r\nimport cardInfoProps from \"./storyProps/cardInfoProps\";\r\nimport cardHorizontalProps from \"./storyProps/cardHorizontalProps\";\r\nimport cardPolygonProps from \"./storyProps/cardPolygonProps\";\r\nimport cardUserProps from \"./storyProps/cardUserProps\";\r\nimport cardPercentageProps from \"./storyProps/cardPercentageProps\";\r\nimport {\r\n  changeDocumentTitle,\r\n  getComponentsRelated\r\n} from \"../../../utils/utils\";\r\n\r\nconst Preview = lazy(() => import(\"../../Preview\"));\r\nconst Card = lazy(() => import(\"./Card\"));\r\nconst Spinner = lazy(() => import(\"../../lib/Spinner\"));\r\n\r\nconst cardComponents = getComponentsRelated(\"card\");\r\n\r\nconst cardToShow = cardType => {\r\n  switch (cardType) {\r\n    case \"image\":\r\n      return cardImageProps;\r\n    case \"horizontal\":\r\n      return cardHorizontalProps;\r\n    case \"reveal\":\r\n      return cardRevealProps;\r\n    case \"info\":\r\n      return cardInfoProps;\r\n    case \"user\":\r\n      return cardUserProps;\r\n    case \"polygon\":\r\n      return cardPolygonProps;\r\n    case \"percentage\":\r\n      return cardPercentageProps;\r\n    default:\r\n      return cardClassicProps;\r\n  }\r\n};\r\n\r\nconst CardStory = ({ location: { state = \"classic\" } }) => {\r\n  useEffect(\r\n    () => {\r\n      document.title = changeDocumentTitle({ component: \"Card\", state });\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [state]\r\n  );\r\n  const cardProps = cardToShow(state);\r\n  return (\r\n    <div>\r\n      <Preview\r\n        title=\"Card\"\r\n        subTitle={cardProps.subTitle}\r\n        description={cardProps.description}\r\n        importType={cardProps.importType}\r\n        propsDescription={cardProps.propsDescription}\r\n        notes={cardProps.notes}\r\n        componentsRealated={cardComponents}\r\n      >\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"center\">\r\n              <h4>Loading implementation</h4>\r\n              <Spinner />\r\n            </div>\r\n          }\r\n        >\r\n          <Card\r\n            cardProps={cardProps.cardProps}\r\n            componentText={cardProps.componentText}\r\n          />\r\n        </Suspense>\r\n      </Preview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardStory;\r\n"],"sourceRoot":""}