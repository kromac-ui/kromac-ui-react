{"version":3,"sources":["components/Preview/Preview.js"],"names":["Table","lazy","Preview","props","title","subTitle","description","importType","propsDescription","notes","componentsRealated","isNotes","trim","className","children","responsive","map","desc","index","name","addChip","type","values","val","parseToHtml","link","to","pathname","toLowerCase","state","component"],"mappings":"2NAMMA,EAAQC,gBAAK,kBAAM,kCA2FVC,EAzFC,SAAAC,GACd,IACEC,EAOED,EAPFC,MADF,EAQID,EANFE,gBAFF,MAEa,GAFb,EAGEC,EAKEH,EALFG,YACAC,EAIEJ,EAJFI,WACAC,EAGEL,EAHFK,iBALF,EAQIL,EAFFM,aANF,MAMU,GANV,EAOEC,EACEP,EADFO,mBAEIC,EAAUF,GAASA,EAAMG,OAE/B,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,kBAAd,UACGT,EACAC,EAASO,QAAU,6CAAcP,QAEpC,mBAAGQ,UAAU,wBAAb,SACGP,IAEH,uBAAOO,UAAU,eAAjB,SACGN,IAEH,oBAAIM,UAAU,2BAAd,qBACA,sBAAKA,UAAU,oBAAf,UACGV,EAAMW,SACP,sBAAKD,UAAU,kBAAf,UACE,uCACA,qBAAKA,UAAU,wBAAf,SACE,eAACb,EAAD,CAAOe,YAAU,EAAjB,UACE,gCACE,+BACE,sCACA,sCACA,wCACA,kDAGJ,gCACGP,EAAiBQ,KAAI,SAACC,EAAMC,GAAP,OACpB,+BACE,6BACGD,EAAKE,OAER,6BACGC,YAAQH,EAAKI,QAEhB,6BACGJ,EAAKK,OAAON,KAAI,SAACO,EAAKL,GAAN,OAAgBE,YAAQG,EAAKL,QAEhD,6BACGD,EAAKX,gBAXDY,QAgBb,kCAILP,GACC,sBAAKE,UAAU,kBAAf,UACE,uCACCW,YAAYf,MAEhBC,GACC,sBAAKG,UAAU,qCAAf,UACE,oDACA,6BACGH,EAAmBM,KAAI,SAACS,EAAMP,GAAP,OACtB,6BACE,cAAC,IAAD,CACEQ,GAAI,CACFC,SAAS,IAAD,OAAMvB,EAAMwB,eACpBC,MAAOJ,EAAKJ,MAHhB,SAMGI,EAAKK,aAPDZ","file":"static/js/5.706a9a23.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\r\nimport parseToHtml from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addChip } from \"../../utils/utils\";\r\nimport \"./Preview.scss\";\r\n\r\nconst Table = lazy(() => import(\"react-bootstrap/Table\"));\r\n\r\nconst Preview = props => {\r\n  const {\r\n    title,\r\n    subTitle = \"\",\r\n    description,\r\n    importType,\r\n    propsDescription,\r\n    notes = \"\",\r\n    componentsRealated\r\n  } = props;\r\n  const isNotes = notes && notes.trim();\r\n\r\n  return (\r\n    <div className=\"preview\">\r\n      <h1 className=\"component-title\">\r\n        {title}\r\n        {subTitle.trim() && <label>{` > ${subTitle}`}</label>}\r\n      </h1>\r\n      <p className=\"component-description\">\r\n        {description}\r\n      </p>\r\n      <label className=\"label-import\">\r\n        {importType}\r\n      </label>\r\n      <h3 className=\"component-implementation\">Preview</h3>\r\n      <div className=\"component-preview\">\r\n        {props.children}\r\n        <div className=\"component-props\">\r\n          <h3>Props</h3>\r\n          <div className=\"component-props-table\">\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>Values</th>\r\n                  <th>Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {propsDescription.map((desc, index) =>\r\n                  <tr key={index}>\r\n                    <td>\r\n                      {desc.name}\r\n                    </td>\r\n                    <td>\r\n                      {addChip(desc.type)}\r\n                    </td>\r\n                    <td>\r\n                      {desc.values.map((val, index) => addChip(val, index))}\r\n                    </td>\r\n                    <td>\r\n                      {desc.description}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n              <tbody />\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        {isNotes &&\r\n          <div className=\"component-props\">\r\n            <h3>Notes</h3>\r\n            {parseToHtml(notes)}\r\n          </div>}\r\n        {componentsRealated &&\r\n          <div className=\"component-props components-related\">\r\n            <h3>Components Related</h3>\r\n            <ul>\r\n              {componentsRealated.map((link, index) =>\r\n                <li key={index}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/${title.toLowerCase()}`,\r\n                      state: link.type\r\n                    }}\r\n                  >\r\n                    {link.component}\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"sourceRoot":""}