{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/lib/Skeleton/Skeleton.js","components/lib/Avatar/Avatar.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","Skeleton","height","width","borderRadius","className","styleSkeleton","style","Avatar","props","useState","isImgLoading","setIsImgLoading","image","name","borderColor","bgColor","isStatic","size","imageFit","imagePosition","tooltip","fontHeight","replace","background","border","nameStyle","avatarStyles","sectionStyles","minWidth","minHeight","h3Styles","fontSize","imageStyle","objectPosition","src","alt","onLoad"],"mappings":"qGAAA,8CAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,gCCjCM,SAASU,EAAgBC,EAAKL,EAAKM,GAYhD,OAXIN,KAAOK,EACTrB,OAAOmB,eAAeE,EAAKL,EAAK,CAC9BM,MAAOA,EACPhB,YAAY,EACZiB,cAAc,EACdC,UAAU,IAGZH,EAAIL,GAAOM,EAGND,EAZT,mC,qGC6BeI,EAzBE,SAAC,GAKX,IAAD,IAJJC,cAII,MAJK,OAIL,MAHJC,aAGI,MAHI,OAGJ,MAFJC,oBAEI,MAFW,OAEX,MADJC,iBACI,MADQ,QACR,EACEC,EAAgB,CACpBJ,SACAC,QACAC,gBAEF,OACE,qBAAKC,UAAS,0BAAqBA,GAAaE,MAAOD,EAAvD,SACE,qBAAKD,UAAS,gCAA2BA,S,iICyFhCG,EA9FA,SAAAC,GACb,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEEC,EASEJ,EATFI,MACAC,EAQEL,EARFK,KAFF,EAUIL,EAPFM,mBAHF,MAGgB,OAHhB,IAUIN,EANFO,eAJF,MATa,mKASb,IAUIP,EALFQ,gBALF,WAUIR,EAJFS,YANF,MAMS,QANT,EAOEC,EAGEV,EAHFU,SAPF,EAUIV,EAFFW,qBARF,MAQkB,MARlB,EASEC,EACEZ,EADFY,QAGIC,EAAsC,EAAzBJ,EAAKK,QAAQ,KAAM,IAChChB,EAAQ,CACZiB,WAAYR,EACZS,OAAO,aAAD,OAAeV,IAGjBW,EAAY,CAChB,cAAeT,EAAQ,0BACAC,EADA,WAEnB,oBACJ,mBAAmB,mBAAnB,OAAuCA,EAAvC,WACAd,aAAa,UAAD,OAAYc,EAAZ,sBAA8BA,EAA9B,WACZ,gBAAgB,QAAhB,OAAyBA,EAAzB,UAGIS,EAAe,CACnBvB,aAAa,QAAD,OAAUc,EAAV,0BAAgCA,EAAhC,UAGRU,EAAgB,CACpBzB,MAAOe,EACPhB,OAAQgB,EACRW,SAAUX,EACVY,UAAWZ,GAGPa,EAAW,CACfC,SAAUV,GAAc,GAAK,MAAQ,SAGjCW,EAAa,CACjB9B,MAAOgB,EAAW,OAAS,OAC3Be,eAAgBd,GAGlB,OACE,sBAAKf,UAAU,0BAA0BE,MAAO,CAAEL,OAAQgB,GAA1D,UACGG,GACC,sBAAMhB,UAAU,iBAAiBE,MAAO,CAAE,SAAUW,GAApD,SACGG,IAEL,sBAAKhB,UAAU,gBAAgBE,MAAK,eAAOoB,GAA3C,UACE,sBACEtB,UAAU,wBACVE,MAAK,2BAAOA,GAAUqB,GAFxB,UAIGjB,GAAgB,cAACV,EAAA,QAAD,CAAUE,MAAM,OAAOD,OAAO,SAC/C,qBACEiC,IAAKtB,EACLuB,IAAI,SACJ7B,MAAO0B,EACPI,OAAQ,kBAAMzB,GAAgB,SAGjCE,GACC,qBACET,UAAU,qBACVE,MAAK,uCAAOA,GAAUmB,GAAjB,IAA4BxB,OAAQgB,IAF3C,SAIE,oBAAIX,MAAOwB,EAAU1B,UAAU,gBAA/B,SACGS","file":"static/js/17.02841f84.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\n\r\nconst Skeleton = ({\r\n  height = \"32px\",\r\n  width = \"100%\",\r\n  borderRadius = \"none\",\r\n  className = \"light\"\r\n}) => {\r\n  const styleSkeleton = {\r\n    height,\r\n    width,\r\n    borderRadius\r\n  };\r\n  return (\r\n    <div className={`kromac-skeleton ${className}`} style={styleSkeleton}>\r\n      <div className={`kromac-skeletonLoader ${className}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSkeleton.propTypes = exact({\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n  borderRadius: PropTypes.string,\r\n  className: PropTypes.oneOf([\"light\", \"dark\"])\r\n});\r\n\r\nexport default Skeleton;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport Skeleton from \"../Skeleton\";\r\n\r\nconst bgDefault = `linear-gradient(\r\n          0deg,\r\n          rgba(166, 69, 163, 1) 0%,\r\n          rgba(77, 202, 208, 1) 100%,\r\n          rgba(255, 250, 250, 1) 100%\r\n          `;\r\n\r\nconst Avatar = props => {\r\n  const [isImgLoading, setIsImgLoading] = useState(true);\r\n  const {\r\n    image,\r\n    name,\r\n    borderColor = \"#000\",\r\n    bgColor = bgDefault,\r\n    isStatic = false,\r\n    size = \"150px\",\r\n    imageFit,\r\n    imagePosition = \"top\",\r\n    tooltip\r\n  } = props;\r\n\r\n  const fontHeight = size.replace(\"px\", \"\") * 1;\r\n  const style = {\r\n    background: bgColor,\r\n    border: `solid 3px ${borderColor}`\r\n  };\r\n\r\n  const nameStyle = {\r\n    \"--transform\": isStatic\r\n      ? `translateX(calc(${size} / -2))`\r\n      : \"translateX(-100%)\",\r\n    \"--transformHover\": `translateX(calc(${size} / -2))`,\r\n    borderRadius: `0 calc(${size} / 2) calc(${size} / 2) 0`,\r\n    \"--paddingLeft\": `calc(${size} / 2)`\r\n  };\r\n\r\n  const avatarStyles = {\r\n    borderRadius: `calc(${size} / 2) 0 0 calc(${size} / 2)`\r\n  };\r\n\r\n  const sectionStyles = {\r\n    width: size,\r\n    height: size,\r\n    minWidth: size,\r\n    minHeight: size\r\n  };\r\n\r\n  const h3Styles = {\r\n    fontSize: fontHeight <= 50 ? \"1em\" : \"1.5em\"\r\n  };\r\n\r\n  const imageStyle = {\r\n    width: imageFit ? \"100%\" : \"auto\",\r\n    objectPosition: imagePosition\r\n  };\r\n\r\n  return (\r\n    <div className=\"kromac-avatar-container\" style={{ height: size }}>\r\n      {tooltip &&\r\n        <span className=\"kromac-tooltip\" style={{ \"--size\": size }}>\r\n          {tooltip}\r\n        </span>}\r\n      <div className=\"kromac-avatar\" style={{ ...avatarStyles }}>\r\n        <div\r\n          className=\"kromac-avatar-section\"\r\n          style={{ ...style, ...sectionStyles }}\r\n        >\r\n          {isImgLoading && <Skeleton width=\"100%\" height=\"100%\" />}\r\n          <img\r\n            src={image}\r\n            alt=\"avatar\"\r\n            style={imageStyle}\r\n            onLoad={() => setIsImgLoading(false)}\r\n          />\r\n        </div>\r\n        {name &&\r\n          <div\r\n            className=\"kromac-avatar-name\"\r\n            style={{ ...style, ...nameStyle, height: size }}\r\n          >\r\n            <h3 style={h3Styles} className=\"text-bg-light\">\r\n              {name}\r\n            </h3>\r\n          </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAvatar.propTypes = exact({\r\n  image: PropTypes.string.isRequired,\r\n  name: PropTypes.string,\r\n  borderColor: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  isStatic: PropTypes.bool,\r\n  size: PropTypes.string,\r\n  imageFit: PropTypes.bool,\r\n  imagePosition: PropTypes.string,\r\n  tooltip: PropTypes.string\r\n});\r\n\r\nexport default Avatar;\r\n"],"sourceRoot":""}