{"version":3,"sources":["utils/utils.js","components/story/Skeleton/storyProps/skeletonLightProps.js","components/story/Skeleton/storyProps/skeletonDarkProps.js","components/story/Skeleton/Skeleton.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","style","Math","ceil","i","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","push","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","skeletonProps","subTitle","importType","skeletonProp","propsDescription","name","values","description","componentText","className","Preview","lazy","Skeleton","Spinner","skeletonComponents","SkeletonHistory","location","useEffect","document","title","window","scrollTo","skeletonDarkProps","skeletonLightProps","notes","componentsRealated","fallback"],"mappings":"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","file":"static/js/51.bb9341c9.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\r\nimport data from \"./components.json\";\r\n\r\nexport const determinateColor = color => {\r\n  switch (color) {\r\n    case \"transparent\":\r\n      return color;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const initialSizeProps = {};\r\n\r\nexport const addChip = (type, index) => {\r\n  if (type.includes(\"default\")) {\r\n    const defaultChip = type.replace(\"default\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <b>default </b>\r\n        <Chip>\r\n          {defaultChip}\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  if (type.includes(\"Required\")) {\r\n    const requiredChip = type.replace(\"Required\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <Chip>\r\n          {requiredChip}\r\n        </Chip>\r\n        <Chip>\r\n          <b>Required </b>\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Chip key={index}>\r\n      {type}\r\n    </Chip>\r\n  );\r\n};\r\n\r\nexport const borderStyle = (cardColor, border = false) =>\r\n  cardColor === \"transparent\" || border\r\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\r\n    : {};\r\n\r\nexport const bgStyleByProps = cardColor => ({\r\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\r\n  color: \"#fff\"\r\n});\r\n\r\nexport const styleCentered = isCentered => {\r\n  return isCentered\r\n    ? {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const getComponentsRelated = component => {\r\n  return data.find(c => c.component === component).subComponents;\r\n};\r\n\r\nexport const sortByLength = words => {\r\n  return words.sort((a, b) => b.length - a.length);\r\n};\r\n\r\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\r\n  if (itemActive.item === item) {\r\n    return \"active\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const templateGenerator = (images, template) => {\r\n  const rowLong = images.reduce(\r\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\r\n    0\r\n  );\r\n  const colLong = images.reduce(\r\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\r\n    0\r\n  );\r\n  const noRowCol = images.filter(\r\n    noRC => noRC.row === undefined && noRC.col === undefined\r\n  ).length;\r\n\r\n  const long = rowLong + colLong + noRowCol;\r\n  let nroRows = 0;\r\n  let nroCols = 0;\r\n  let style = \"\";\r\n\r\n  if (template === \"lg\") {\r\n    nroRows = Math.ceil(long / 4);\r\n    nroCols = 4;\r\n  }\r\n  if (template === \"md\") {\r\n    nroRows = Math.ceil(long / 2);\r\n    nroCols = 2;\r\n  }\r\n  if (template === \"sm\") {\r\n    return {};\r\n  }\r\n\r\n  for (let i = 0; i < nroRows; i++) {\r\n    style = style + `\"`;\r\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\r\n    if (template === \"lg\") {\r\n      style = style + `\" 33.33vh `;\r\n    }\r\n    if (template === \"md\") {\r\n      style = style + `\" 250px `;\r\n    }\r\n  }\r\n  return style;\r\n};\r\n\r\nexport const widthCalculator = width => {\r\n  let tag = \"\";\r\n  if (width > 768) tag = \"lg\";\r\n  if (width <= 768) tag = \"md\";\r\n  if (width <= 550) tag = \"sm\";\r\n  return tag;\r\n};\r\n\r\nexport const rowColGenerator = item => {\r\n  const { col, row } = item;\r\n  const style = {};\r\n  if (row) style.gridRow = `span ${row}`;\r\n  if (col) style.gridColumn = `span ${col}`;\r\n  return style;\r\n};\r\n\r\nexport const markTypeRow = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    return \"par\";\r\n  }\r\n  if (key === 0) {\r\n    return \"impar offset-md-2\";\r\n  }\r\n  return \"impar\";\r\n};\r\n\r\nexport const markAsLastImageImgPar = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    if (key === 2) {\r\n      return \"last\";\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const markAsOnlyImageRowImpar = count => {\r\n  if (count === 1) {\r\n    return \"special\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const rowColMaker = images => {\r\n  const numberRows = Math.ceil(images.length / 3);\r\n  const numberRows2 = Math.ceil(images.length / 2);\r\n  const rowAvg = (numberRows + numberRows2) / 2;\r\n  const rows = [];\r\n  let imgs = [];\r\n  let j = 0;\r\n\r\n  for (let i = 0; i < rowAvg; i++) {\r\n    imgs = [];\r\n    if (i % 2 === 0) {\r\n      for (let m = 0; m < 3; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let m = 0; m < 2; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    if (imgs.length > 0) {\r\n      rows.push(imgs);\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nexport const inactivateIonIcon = (number, indicator, long) => {\r\n  if (indicator === \"left\") {\r\n    if (number === 0) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  } else {\r\n    if (number === long) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeDocumentTitle = ({ component, state }) => {\r\n  return `Kromac UI: ${component} ${state}`;\r\n};\r\n","const subTitle = \"Skeleton light\";\r\nconst importType = `import Skeleton from \"kromac-ui/dist/Panel\";`;\r\n\r\nconst skeletonProp = { width: \"250px\" };\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Skeleton </span>\r\n      <span className=\"var\">width</span>=<span className=\"string\">\"250px\" </span>\r\n      <span className=\"react\">/&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"height\",\r\n    type: \"string\",\r\n    values: [\"default 32px\"],\r\n    description: \"Skeleton height in px, em or whatever valid format you want.\"\r\n  },\r\n  {\r\n    name: \"width\",\r\n    type: \"string\",\r\n    values: [`default 100%`],\r\n    description: \"Skeleton width in px, em or whatever valid format you want.\"\r\n  },\r\n  {\r\n    name: \"borderRadius\",\r\n    type: \"string\",\r\n    values: [`default none`],\r\n    description: \"Skeleton border radius in px, em or %.\"\r\n  },\r\n  {\r\n    name: \"className\",\r\n    type: \"string\",\r\n    values: [\"default light\", \"dark\", \"light\"],\r\n    description: \"Skeleton theme.\"\r\n  }\r\n];\r\n\r\nconst skeletonProps = {\r\n  subTitle,\r\n  importType,\r\n  skeletonProp,\r\n  propsDescription,\r\n  componentText\r\n};\r\n\r\nexport default skeletonProps;\r\n","const subTitle = \"Skeleton dark\";\r\nconst importType = `import Skeleton from \"kromac-ui/dist/Panel\";`;\r\n\r\nconst skeletonProp = { className: \"dark\", width: \"250px\" };\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Skeleton </span>\r\n      <br />\r\n      <span className=\"var tab\">\r\n        className\r\n      </span>=<span className=\"string\">\"dark\"</span>\r\n      <br />\r\n      <span className=\"var tab\">\r\n        width\r\n      </span>=<span className=\"string\">\"250px\"</span>\r\n      <br />\r\n      <span className=\"react\">/&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"height\",\r\n    type: \"string\",\r\n    values: [\"default 32px\"],\r\n    description: \"Sets height.\"\r\n  },\r\n  {\r\n    name: \"width\",\r\n    type: \"string\",\r\n    values: [`default 100%`],\r\n    description: \"Sets width.\"\r\n  },\r\n  {\r\n    name: \"borderRadius\",\r\n    type: \"string\",\r\n    values: [`default none`],\r\n    description: \"Sets border radius.\"\r\n  },\r\n  {\r\n    name: \"className\",\r\n    type: \"string\",\r\n    values: [\"dark\", \" default light\", \"dark\"],\r\n    description: \"Sets Skeleton theme.\"\r\n  }\r\n];\r\n\r\nconst skeletonProps = {\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  skeletonProp,\r\n  subTitle\r\n};\r\n\r\nexport default skeletonProps;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport skeletonLightProps from \"./storyProps/skeletonLightProps\";\r\nimport skeletonDarkProps from \"./storyProps/skeletonDarkProps\";\r\nimport {\r\n  changeDocumentTitle,\r\n  getComponentsRelated\r\n} from \"../../../utils/utils\";\r\n\r\nconst Preview = lazy(() => import(\"../../Preview\"));\r\nconst Skeleton = lazy(() => import(\"./Skeleton\"));\r\nconst Spinner = lazy(() => import(\"../../lib/Spinner\"));\r\n\r\nconst skeletonComponents = getComponentsRelated(\"skeleton\");\r\n\r\nconst SkeletonToShow = skeletonType => {\r\n  switch (skeletonType) {\r\n    case \"dark\":\r\n      return skeletonDarkProps;\r\n    default:\r\n      return skeletonLightProps;\r\n  }\r\n};\r\n\r\nconst SkeletonHistory = ({ location: { state = \"light\" } }) => {\r\n  useEffect(\r\n    () => {\r\n      document.title = changeDocumentTitle({ component: \"Skeleton\", state });\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [state]\r\n  );\r\n  const skeletonProps = SkeletonToShow(state);\r\n  return (\r\n    <div>\r\n      <Preview\r\n        title=\"Skeleton\"\r\n        subTitle={skeletonProps.subTitle}\r\n        description={skeletonProps.description}\r\n        importType={skeletonProps.importType}\r\n        propsDescription={skeletonProps.propsDescription}\r\n        notes={skeletonProps.notes}\r\n        componentsRealated={skeletonComponents}\r\n      >\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"center\">\r\n              <h4>Loading implementation</h4>\r\n              <Spinner />\r\n            </div>\r\n          }\r\n        >\r\n          <Skeleton\r\n            skeletonProps={skeletonProps.skeletonProp}\r\n            componentText={skeletonProps.componentText}\r\n          />\r\n        </Suspense>\r\n      </Preview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkeletonHistory;\r\n"],"sourceRoot":""}