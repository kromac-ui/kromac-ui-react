{"version":3,"sources":["utils/utils.js","components/story/Banner/storyProps/bannerClassicProps.js","components/story/Banner/storyProps/bannerImageProps.js","components/story/Banner/storyProps/bannerTextProps.js","components/story/Banner/Banner.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","style","Math","ceil","i","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","push","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","bannersProps","bannerProps","image","height","overlay","componentText","className","importType","notes","propsDescription","name","values","description","subTitle","bannerType","title","Preview","lazy","Banner","Spinner","bannerComponents","BannerHistory","location","useEffect","document","window","scrollTo","bannerImageProps","bannerTextProps","bannerClassicProps","bannerToShow","componentsRealated","fallback"],"mappings":"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","file":"static/js/45.58b05ab0.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\r\nimport data from \"./components.json\";\r\n\r\nexport const determinateColor = color => {\r\n  switch (color) {\r\n    case \"transparent\":\r\n      return color;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const initialSizeProps = {};\r\n\r\nexport const addChip = (type, index) => {\r\n  if (type.includes(\"default\")) {\r\n    const defaultChip = type.replace(\"default\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <b>default </b>\r\n        <Chip>\r\n          {defaultChip}\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  if (type.includes(\"Required\")) {\r\n    const requiredChip = type.replace(\"Required\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <Chip>\r\n          {requiredChip}\r\n        </Chip>\r\n        <Chip>\r\n          <b>Required </b>\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Chip key={index}>\r\n      {type}\r\n    </Chip>\r\n  );\r\n};\r\n\r\nexport const borderStyle = (cardColor, border = false) =>\r\n  cardColor === \"transparent\" || border\r\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\r\n    : {};\r\n\r\nexport const bgStyleByProps = cardColor => ({\r\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\r\n  color: \"#fff\"\r\n});\r\n\r\nexport const styleCentered = isCentered => {\r\n  return isCentered\r\n    ? {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const getComponentsRelated = component => {\r\n  return data.find(c => c.component === component).subComponents;\r\n};\r\n\r\nexport const sortByLength = words => {\r\n  return words.sort((a, b) => b.length - a.length);\r\n};\r\n\r\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\r\n  if (itemActive.item === item) {\r\n    return \"active\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const templateGenerator = (images, template) => {\r\n  const rowLong = images.reduce(\r\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\r\n    0\r\n  );\r\n  const colLong = images.reduce(\r\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\r\n    0\r\n  );\r\n  const noRowCol = images.filter(\r\n    noRC => noRC.row === undefined && noRC.col === undefined\r\n  ).length;\r\n\r\n  const long = rowLong + colLong + noRowCol;\r\n  let nroRows = 0;\r\n  let nroCols = 0;\r\n  let style = \"\";\r\n\r\n  if (template === \"lg\") {\r\n    nroRows = Math.ceil(long / 4);\r\n    nroCols = 4;\r\n  }\r\n  if (template === \"md\") {\r\n    nroRows = Math.ceil(long / 2);\r\n    nroCols = 2;\r\n  }\r\n  if (template === \"sm\") {\r\n    return {};\r\n  }\r\n\r\n  for (let i = 0; i < nroRows; i++) {\r\n    style = style + `\"`;\r\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\r\n    if (template === \"lg\") {\r\n      style = style + `\" 33.33vh `;\r\n    }\r\n    if (template === \"md\") {\r\n      style = style + `\" 250px `;\r\n    }\r\n  }\r\n  return style;\r\n};\r\n\r\nexport const widthCalculator = width => {\r\n  let tag = \"\";\r\n  if (width > 768) tag = \"lg\";\r\n  if (width <= 768) tag = \"md\";\r\n  if (width <= 550) tag = \"sm\";\r\n  return tag;\r\n};\r\n\r\nexport const rowColGenerator = item => {\r\n  const { col, row } = item;\r\n  const style = {};\r\n  if (row) style.gridRow = `span ${row}`;\r\n  if (col) style.gridColumn = `span ${col}`;\r\n  return style;\r\n};\r\n\r\nexport const markTypeRow = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    return \"par\";\r\n  }\r\n  if (key === 0) {\r\n    return \"impar offset-md-2\";\r\n  }\r\n  return \"impar\";\r\n};\r\n\r\nexport const markAsLastImageImgPar = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    if (key === 2) {\r\n      return \"last\";\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const markAsOnlyImageRowImpar = count => {\r\n  if (count === 1) {\r\n    return \"special\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const rowColMaker = images => {\r\n  const numberRows = Math.ceil(images.length / 3);\r\n  const numberRows2 = Math.ceil(images.length / 2);\r\n  const rowAvg = (numberRows + numberRows2) / 2;\r\n  const rows = [];\r\n  let imgs = [];\r\n  let j = 0;\r\n\r\n  for (let i = 0; i < rowAvg; i++) {\r\n    imgs = [];\r\n    if (i % 2 === 0) {\r\n      for (let m = 0; m < 3; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let m = 0; m < 2; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    if (imgs.length > 0) {\r\n      rows.push(imgs);\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nexport const inactivateIonIcon = (number, indicator, long) => {\r\n  if (indicator === \"left\") {\r\n    if (number === 0) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  } else {\r\n    if (number === long) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeDocumentTitle = ({ component, state }) => {\r\n  return `Kromac UI: ${component} ${state}`;\r\n};\r\n","const subTitle = \"Banner classic\";\r\nconst importType = `import Banner from \"kromac-ui/dist/Banner\";`;\r\nconst notes = `\r\n  <p>For a better experience:</p>\r\n  <ul>\r\n    <li>* The image should be png with a transparent background as shown in the example.</li>\r\n    <li>* Use only text tags as children.</li>\r\n  </ul>\r\n  <br />\r\n  <h5>Recomendations:</h5>\r\n  If you are going to use a rectangular image (horizontally) and you want to use the prop \r\n  <div class=\"chip\">overlay</div> \r\n  also use the prop <div class=\"chip\">isBottom</div> to align the image at bottom of the banner.\r\n`;\r\n\r\nconst bannerProps = {\r\n  image:\r\n    \"https://cdn.pixabay.com/photo/2018/04/22/23/18/skeleton-3342754_1280.png\",\r\n  height: \"300px\",\r\n  overlay: true\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Banner</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        height\r\n      </span>=<span className=\"string\">\"300px\"</span>\r\n      <br />\r\n      <span className=\"component tab\">overlay</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;h1 </span>\r\n      <span className=\"component\">\r\n        className\r\n      </span>=<span className=\"string\">\"text-bg-light\"</span>\r\n      <span className=\"var\">&gt;</span>\r\n      <br />\r\n      <span className=\"text tab2\">Title Here</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;/h1&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p </span>\r\n      <span className=\"component\">\r\n        className\r\n      </span>=<span className=\"string\">\"text-bg-light\"</span>\r\n      <span className=\"var\">&gt;</span>\r\n      <br />\r\n      <span className=\"text tab2\">Some text here</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Banner&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"bannerType\",\r\n    type: \"string\",\r\n    values: [\"default classic\", \"classic\", \"image\", \"text\"],\r\n    description: \"Banner type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Image url.\"\r\n  },\r\n  {\r\n    name: \"background\",\r\n    type: \"string\",\r\n    values: [\"default #000\"],\r\n    description: \"Sets background color.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Sets font color.\"\r\n  },\r\n  {\r\n    name: \"height\",\r\n    type: \"string\",\r\n    values: [\"default auto\"],\r\n    description: \"Set height of component.\"\r\n  },\r\n  {\r\n    name: \"order\",\r\n    type: \"string\",\r\n    values: [\"default right\", \"left\"],\r\n    description: \"Side where the image will be displayed.\"\r\n  },\r\n  {\r\n    name: \"overlay\",\r\n    type: \"bool\",\r\n    values: [\"default false\"],\r\n    description: \"Display image with an overlay effect on the banner.\"\r\n  },\r\n  {\r\n    name: \"isBottom\",\r\n    type: \"bool\",\r\n    values: [\"default false\"],\r\n    description:\r\n      \"This prop will align the image to the bottom side, but will only work with <overlay> prop turned on.\"\r\n  },\r\n  {\r\n    name: \"textAlign\",\r\n    type: \"string\",\r\n    values: [\"default center\"],\r\n    description: \"Text align options. (this do not affect the <order> prop).\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Display any element you want to appear in the banner.\"\r\n  }\r\n];\r\n\r\nconst bannersProps = {\r\n  bannerProps,\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default bannersProps;\r\n","const subTitle = \"Banner image\";\r\nconst importType = `import Banner from \"kromac-ui/dist/Banner\";`;\r\nconst notes = `\r\n  <p>\r\n    For a better experience use only text tags as children.\r\n  </p>\r\n`;\r\n\r\nconst bannerProps = {\r\n  bannerType: \"image\",\r\n  image:\r\n    \"https://cdn.pixabay.com/photo/2018/07/05/22/16/panorama-3519309_1280.jpg\",\r\n  height: \"300px\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Banner</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        bannerType\r\n      </span>=<span className=\"string\">\"image\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        height\r\n      </span>=<span className=\"string\">\"300px\"</span>\r\n      <br />\r\n      <span className=\"react\">&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;h1 </span>\r\n      <span className=\"component\">\r\n        className\r\n      </span>=<span className=\"string\">\"text-bg-light\"</span>\r\n      <span className=\"var\">&gt;</span>\r\n      <br />\r\n      <span className=\"text tab2\">Title Here</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;/h1&gt;</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;p </span>\r\n      <span className=\"component\">\r\n        className\r\n      </span>=<span className=\"string\">\"text-bg-light\"</span>\r\n      <span className=\"var\">&gt;</span>\r\n      <br />\r\n      <span className=\"text tab2\">Some text here</span>\r\n      <br />\r\n      <span className=\"var tab\">&lt;/p&gt;</span>\r\n      <br />\r\n      <span className=\"react\">&lt;/Banner&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"bannerType\",\r\n    type: \"string\",\r\n    values: [\"image\", \"default classic\", \"text\", \"classic\"],\r\n    description: \"Banner type.\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Image url.\"\r\n  },\r\n  {\r\n    name: \"textAlign\",\r\n    type: \"string\",\r\n    values: [\"default center\"],\r\n    description: \"Side where you want to align the text.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [\"default #fff\"],\r\n    description: \"Sets font color.\"\r\n  },\r\n  {\r\n    name: \"height\",\r\n    type: \"string\",\r\n    values: [\"default 500px\"],\r\n    description: \"Set height of component.\"\r\n  },\r\n  {\r\n    name: \"attachment\",\r\n    type: \"string\",\r\n    values: [\"default fixed\"],\r\n    description: \"Sets background attachment.\"\r\n  },\r\n  {\r\n    name: \"children\",\r\n    type: \"any\",\r\n    values: [],\r\n    description: \"Display any element you want to appear in the banner.\"\r\n  }\r\n];\r\n\r\nconst bannersProps = {\r\n  bannerProps,\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default bannersProps;\r\n","const subTitle = \"Banner text\";\r\nconst importType = `import Banner from \"kromac-ui/dist/Banner\";`;\r\n\r\nconst notes = `\r\n  <p>\r\n    For a better experience do not set a long text as title.\r\n  </p>  \r\n  When the screen viewport is <div class=\"chip\">767px</div> or lower the title will be centered and moved to the top.\r\n  <br />\r\n  Do not set the <div class=\"chip\">bgTextColor</div> as <div class=\"chip\">#000</div> or \r\n  <div class=\"chip\">\"black\"</div> because it will make the text invisible.\r\n`;\r\n\r\nconst bannerProps = {\r\n  bannerType: \"text\",\r\n  image:\r\n    \"https://images.pexels.com/photos/3075993/pexels-photo-3075993.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\r\n  height: \"500px\",\r\n  title: \"Some title here\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Banner</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        bannerType\r\n      </span>=<span className=\"string\">\"text\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        image\r\n      </span>=<span className=\"string\">\"image.png\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        title\r\n      </span>=<span className=\"string\">\"Some title here\"</span>\r\n      <br />\r\n      <span className=\"component tab\">\r\n        height\r\n      </span>=<span className=\"string\">\"500px\"</span>\r\n      <br />\r\n      <span className=\"react\">/&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"bannerType\",\r\n    type: \"string\",\r\n    values: [\"text\", \"default classic\", \"image\", \"classic\"],\r\n    description: \"Banner type.\"\r\n  },\r\n  {\r\n    name: \"title\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Text that will appear as a title\"\r\n  },\r\n  {\r\n    name: \"image\",\r\n    type: \"string Required\",\r\n    values: [],\r\n    description: \"Image url.\"\r\n  },\r\n  {\r\n    name: \"bgTextColor\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: `Text background color (please do not put #000 or \"black\").`\r\n  },\r\n  {\r\n    name: \"height\",\r\n    type: \"string\",\r\n    values: [\"default 500px\"],\r\n    description: \"Set height of component.\"\r\n  },\r\n  {\r\n    name: \"order\",\r\n    type: \"string\",\r\n    values: [\"default left\"],\r\n    description: \"Side where the title will be displayed.\"\r\n  },\r\n  {\r\n    name: \"attachment\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Sets background attachment.\"\r\n  },\r\n  {\r\n    name: \"textAlign\",\r\n    type: \"string\",\r\n    values: [\"default center\"],\r\n    description: \"Text align options. (this do not affect the <order> prop).\"\r\n  },\r\n  {\r\n    name: \"bgPosition\",\r\n    type: \"string\",\r\n    values: [\"default center\"],\r\n    description: \"Sets image position to be displayed in the background.\"\r\n  }\r\n];\r\n\r\nconst bannersProps = {\r\n  bannerProps,\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  subTitle\r\n};\r\n\r\nexport default bannersProps;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport bannerClassicProps from \"./storyProps/bannerClassicProps\";\r\nimport bannerImageProps from \"./storyProps/bannerImageProps\";\r\nimport bannerTextProps from \"./storyProps/bannerTextProps\";\r\nimport {\r\n  changeDocumentTitle,\r\n  getComponentsRelated\r\n} from \"../../../utils/utils\";\r\n\r\nconst Preview = lazy(() => import(\"../../Preview\"));\r\nconst Banner = lazy(() => import(\"./Banner\"));\r\nconst Spinner = lazy(() => import(\"../../lib/Spinner\"));\r\n\r\nconst bannerComponents = getComponentsRelated(\"banner\");\r\n\r\nconst bannerToShow = bannerType => {\r\n  switch (bannerType) {\r\n    case \"image\":\r\n      return bannerImageProps;\r\n    case \"text\":\r\n      return bannerTextProps;\r\n    default:\r\n      return bannerClassicProps;\r\n  }\r\n};\r\n\r\nconst BannerHistory = ({ location: { state = \"classic\" } }) => {\r\n  useEffect(\r\n    () => {\r\n      document.title = changeDocumentTitle({ component: \"Banner\", state });\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [state]\r\n  );\r\n  const bannerProps = bannerToShow(state);\r\n  return (\r\n    <div>\r\n      <Preview\r\n        title=\"Banner\"\r\n        subTitle={bannerProps.subTitle}\r\n        description={bannerProps.description}\r\n        importType={bannerProps.importType}\r\n        propsDescription={bannerProps.propsDescription}\r\n        notes={bannerProps.notes}\r\n        componentsRealated={bannerComponents}\r\n      >\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"center\">\r\n              <h4>Loading implementation</h4>\r\n              <Spinner />\r\n            </div>\r\n          }\r\n        >\r\n          <Banner\r\n            bannersProps={bannerProps.bannerProps}\r\n            componentText={bannerProps.componentText}\r\n          />\r\n        </Suspense>\r\n      </Preview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerHistory;\r\n"],"sourceRoot":""}