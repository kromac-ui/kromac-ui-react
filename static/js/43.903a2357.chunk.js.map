{"version":3,"sources":["components/lib/Button/Button.js","components/lib/Spinner/components/SpinnerRainbow/SpinnerRainbow.js","components/lib/Spinner/components/SpinnerSVG/SpinnerSVG.js","components/lib/Spinner/components/SpinnerLighter/SpinnerLighter.js","components/lib/Spinner/components/SpinnerWaves/SpinnerWaves.js","components/lib/Spinner/Spinner.js"],"names":["Button","color","buttonType","loading","disabled","onClick","children","spinnerClass","disabledClass","bgSpinner","className","Spinner","bgColorInside","spanGenerator","loops","spans","i","style","push","SpinnerRainbow","props","size","bgColor","isCentered","styleCentered","SpinnerSVG","fontColor","shadows","isShadows","background","src","alt","SpinnerLighter","SpinnerWaves","spinnerType"],"mappings":"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","file":"static/js/43.903a2357.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst Button = ({\r\n  color = \"primary\",\r\n  buttonType = \"classic\",\r\n  loading = false,\r\n  disabled = false,\r\n  onClick,\r\n  children\r\n}) => {\r\n  const spinnerClass = loading ? \"spinner\" : \"\";\r\n  const disabledClass = disabled ? \"disabled\" : \"\";\r\n  const bgSpinner = buttonType === \"classic\" ? \"#fff\" : \"#212f3c\";\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        className={`kromac-btn ${color} ${buttonType} ${disabledClass}`}\r\n      >\r\n        <span className=\"kromac-span-button\" />\r\n        <div className={`button-content ${spinnerClass}`}>\r\n          {loading && <Spinner bgColorInside={bgSpinner} />}\r\n          <p>\r\n            {children}\r\n          </p>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = exact({\r\n  buttonType: PropTypes.oneOf([\"classic\", \"neon\"]),\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"dark\",\r\n    \"transparent\"\r\n  ]),\r\n  loading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.any\r\n});\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerRainbow = props => {\r\n  const { size = \"sm\", bgColor = \"#fff\", isCentered = false } = props;\r\n\r\n  const style = {\r\n    \"--bgSpiner\": bgColor\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-rainbown ${size}`}\r\n      style={{ ...style, ...styleCentered(isCentered) }}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(5)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerRainbow.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  bgColor: PropTypes.string,\r\n  isCentered: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerRainbow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerSVG = props => {\r\n  const {\r\n    size = \"sm\",\r\n    color = \"#fff\",\r\n    bgColor = \"#000\",\r\n    fontColor = \"#fff\",\r\n    isCentered = false,\r\n    shadows = true\r\n  } = props;\r\n\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n  const style = {\r\n    background: bgColor,\r\n    \"--bgSpiner\": color,\r\n    \"--loaderColor\": fontColor\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-svg ${size} ${isShadows}`}\r\n      style={{ ...style, ...styleCentered(isCentered) }}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(20)}\r\n        <div className=\"rocket\">\r\n          <img\r\n            src=\"https://res.cloudinary.com/dxg9gszax/image/upload/v1634079842/kromac-ui/rocket_grqgxg.svg\"\r\n            alt=\"rocket\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerSVG.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  color: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  isCentered: PropTypes.bool,\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerSVG;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst SpinnerLighter = props => {\r\n  const {\r\n    size = \"sm\",\r\n    isCentered = false,\r\n    shadows = true,\r\n    bgColorInside = \"#fff\"\r\n  } = props;\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-lighter ${size} ${isShadows}`}\r\n      style={styleCentered(isCentered)}\r\n    >\r\n      <div className=\"loader\">\r\n        <span style={{ background: bgColorInside }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerLighter.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  isCentered: PropTypes.bool,\r\n  bgColorInside: PropTypes.oneOf([\"#fff\", \"#000\"]),\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerLighter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerWaves = props => {\r\n  const { size = \"sm\", isCentered = false, shadows = true } = props;\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-waves ${size} ${isShadows}`}\r\n      style={styleCentered(isCentered)}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerWaves.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  isCentered: PropTypes.bool,\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerWaves;\r\n","import React from \"react\";\r\nimport SpinnerRainbow from \"./components/SpinnerRainbow\";\r\nimport SpinnerSVG from \"./components/SpinnerSVG\";\r\nimport SpinnerLighter from \"./components/SpinnerLighter\";\r\nimport SpinnerWaves from \"./components/SpinnerWaves\";\r\n\r\nconst Spinner = props => {\r\n  const { spinnerType } = props;\r\n  switch (spinnerType) {\r\n    case \"svg\":\r\n      return <SpinnerSVG {...props} />;\r\n    case \"rainbow\":\r\n      return <SpinnerRainbow {...props} />;\r\n    case \"waves\":\r\n      return <SpinnerWaves {...props} />;\r\n    default:\r\n      return <SpinnerLighter {...props} />;\r\n  }\r\n};\r\n\r\nexport default Spinner;\r\n"],"sourceRoot":""}