{"version":3,"sources":["utils/utils.js","components/story/Spinner/storyProps/spinnerLighterProps.js","components/story/Spinner/storyProps/spinnerWavesProps.js","components/story/Spinner/storyProps/spinnerSvgProps.js","components/story/Spinner/storyProps/spinnerRainbowProps.js","components/story/Spinner/Spinner.story.js"],"names":["determinateColor","color","initialSizeProps","addChip","type","index","includes","defaultChip","replace","requiredChip","borderStyle","cardColor","border","borderRadius","bgStyleByProps","background","styleCentered","isCentered","position","top","left","transform","getComponentsRelated","component","data","find","c","subComponents","sortByLength","words","sort","a","b","length","isViewStyleKromacCol","item","itemActive","templateGenerator","images","template","long","reduce","sum","value","row","col","filter","noRC","undefined","nroRows","nroCols","style","Math","ceil","i","j","widthCalculator","width","tag","rowColGenerator","gridRow","gridColumn","markTypeRow","key","markAsLastImageImgPar","markAsOnlyImageRowImpar","count","rowColMaker","rowAvg","rows","imgs","m","push","inactivateIonIcon","number","indicator","pointerEvents","changeDocumentTitle","state","spinnersProps","componentText","className","importType","notes","propsDescription","name","values","description","spinnerProps","subTitle","spinnerType","Preview","lazy","Spinner","SpinnerLoader","spinnerComponents","SpinnerHistory","location","useEffect","document","title","window","scrollTo","spinnerWavesProps","spinnerSvgProps","spinnerRainbowProps","spinnerLighterProps","spinnerToShow","componentsRealated","fallback"],"mappings":"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","file":"static/js/53.fca0cdc9.chunk.js","sourcesContent":["import { Chip } from \"react-materialize\";\r\nimport data from \"./components.json\";\r\n\r\nexport const determinateColor = color => {\r\n  switch (color) {\r\n    case \"transparent\":\r\n      return color;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const initialSizeProps = {};\r\n\r\nexport const addChip = (type, index) => {\r\n  if (type.includes(\"default\")) {\r\n    const defaultChip = type.replace(\"default\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <b>default </b>\r\n        <Chip>\r\n          {defaultChip}\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  if (type.includes(\"Required\")) {\r\n    const requiredChip = type.replace(\"Required\", \"\");\r\n    return (\r\n      <div key={index}>\r\n        <Chip>\r\n          {requiredChip}\r\n        </Chip>\r\n        <Chip>\r\n          <b>Required </b>\r\n        </Chip>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Chip key={index}>\r\n      {type}\r\n    </Chip>\r\n  );\r\n};\r\n\r\nexport const borderStyle = (cardColor, border = false) =>\r\n  cardColor === \"transparent\" || border\r\n    ? { border: \"solid 2px #fff\", borderRadius: \"1em\" }\r\n    : {};\r\n\r\nexport const bgStyleByProps = cardColor => ({\r\n  background: `linear-gradient(45deg, #000, ${cardColor})`,\r\n  color: \"#fff\"\r\n});\r\n\r\nexport const styleCentered = isCentered => {\r\n  return isCentered\r\n    ? {\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const getComponentsRelated = component => {\r\n  return data.find(c => c.component === component).subComponents;\r\n};\r\n\r\nexport const sortByLength = words => {\r\n  return words.sort((a, b) => b.length - a.length);\r\n};\r\n\r\nexport const isViewStyleKromacCol = ({ item, itemActive }) => {\r\n  if (itemActive.item === item) {\r\n    return \"active\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const templateGenerator = (images, template) => {\r\n  const rowLong = images.reduce(\r\n    (sum, value) => (typeof value.row == \"number\" ? sum + value.row : sum),\r\n    0\r\n  );\r\n  const colLong = images.reduce(\r\n    (sum, value) => (typeof value.col == \"number\" ? sum + value.col : sum),\r\n    0\r\n  );\r\n  const noRowCol = images.filter(\r\n    noRC => noRC.row === undefined && noRC.col === undefined\r\n  ).length;\r\n\r\n  const long = rowLong + colLong + noRowCol;\r\n  let nroRows = 0;\r\n  let nroCols = 0;\r\n  let style = \"\";\r\n\r\n  if (template === \"lg\") {\r\n    nroRows = Math.ceil(long / 4);\r\n    nroCols = 4;\r\n  }\r\n  if (template === \"md\") {\r\n    nroRows = Math.ceil(long / 2);\r\n    nroCols = 2;\r\n  }\r\n  if (template === \"sm\") {\r\n    return {};\r\n  }\r\n\r\n  for (let i = 0; i < nroRows; i++) {\r\n    style = style + `\"`;\r\n    for (let j = 0; j < nroCols; j++) style = style + `1fr `;\r\n    if (template === \"lg\") {\r\n      style = style + `\" 33.33vh `;\r\n    }\r\n    if (template === \"md\") {\r\n      style = style + `\" 250px `;\r\n    }\r\n  }\r\n  return style;\r\n};\r\n\r\nexport const widthCalculator = width => {\r\n  let tag = \"\";\r\n  if (width > 768) tag = \"lg\";\r\n  if (width <= 768) tag = \"md\";\r\n  if (width <= 550) tag = \"sm\";\r\n  return tag;\r\n};\r\n\r\nexport const rowColGenerator = item => {\r\n  const { col, row } = item;\r\n  const style = {};\r\n  if (row) style.gridRow = `span ${row}`;\r\n  if (col) style.gridColumn = `span ${col}`;\r\n  return style;\r\n};\r\n\r\nexport const markTypeRow = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    return \"par\";\r\n  }\r\n  if (key === 0) {\r\n    return \"impar offset-md-2\";\r\n  }\r\n  return \"impar\";\r\n};\r\n\r\nexport const markAsLastImageImgPar = (index, key) => {\r\n  if (index % 2 === 0) {\r\n    if (key === 2) {\r\n      return \"last\";\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const markAsOnlyImageRowImpar = count => {\r\n  if (count === 1) {\r\n    return \"special\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const rowColMaker = images => {\r\n  const numberRows = Math.ceil(images.length / 3);\r\n  const numberRows2 = Math.ceil(images.length / 2);\r\n  const rowAvg = (numberRows + numberRows2) / 2;\r\n  const rows = [];\r\n  let imgs = [];\r\n  let j = 0;\r\n\r\n  for (let i = 0; i < rowAvg; i++) {\r\n    imgs = [];\r\n    if (i % 2 === 0) {\r\n      for (let m = 0; m < 3; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    } else {\r\n      for (let m = 0; m < 2; m++) {\r\n        if (images[j]) {\r\n          imgs.push(images[j]);\r\n          j++;\r\n        }\r\n      }\r\n    }\r\n    if (imgs.length > 0) {\r\n      rows.push(imgs);\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nexport const inactivateIonIcon = (number, indicator, long) => {\r\n  if (indicator === \"left\") {\r\n    if (number === 0) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  } else {\r\n    if (number === long) {\r\n      return { pointerEvents: \"none\", filter: \"contrast(0.9)\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport const changeDocumentTitle = ({ component, state }) => {\r\n  return `Kromac UI: ${component} ${state}`;\r\n};\r\n","const subTitle = \"Spinner lighter\";\r\nconst importType = `import Spinner from \"kromac-ui/dist/Spinner\";`;\r\nconst notes = `\r\nWhen the <div class=\"chip\">isCentered</div> prop is turned on, the\r\n<div class=\"chip\">size</div> prop will not work.\r\n<br />\r\nThe value of <div class=\"chip\">bgColorInside</div> prop only can be\r\n<div class=\"chip\">#000</div>,\r\n<div class=\"chip\">black</div>,\r\n<div class=\"chip\">#fff</div>,\r\n<div class=\"chip\">white</div>.\r\n`;\r\n\r\nconst spinnerProps = {};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Spinner /&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"spinnerType\",\r\n    type: \"string\",\r\n    values: [\"default lighter\", \"waves\", \"svg\", \"rainbow\", \"lighter\"],\r\n    description: \"Spinner type.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default sm`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Sets Spinner size.\"\r\n  },\r\n  {\r\n    name: \"isCentered\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description:\r\n      \"When this prop is turned on, it fixed the spinner in the middle of the screen.\"\r\n  },\r\n  {\r\n    name: \"bgColorInside\",\r\n    type: \"string\",\r\n    values: [\"default #fff\", \"#000\", \"#fff\"],\r\n    description: \"Sets background color inside the Spinner.\"\r\n  },\r\n  {\r\n    name: \"shadows\",\r\n    type: \"bool\",\r\n    values: [\"default true\"],\r\n    description: \"Adds a shadows around the Spinner.\"\r\n  }\r\n];\r\n\r\nconst spinnersProps = {\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  spinnerProps,\r\n  subTitle\r\n};\r\n\r\nexport default spinnersProps;\r\n","const subTitle = \"Spinner waves\";\r\nconst importType = `import Spinner from \"kromac-ui/dist/Spinner\";`;\r\n\r\nconst spinnerProps = {\r\n  spinnerType: \"waves\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Spinner </span>\r\n      <span className=\"var\">\r\n        spinnerType\r\n      </span>=<span className=\"string\">\"waves\"</span>\r\n      <span className=\"react\"> /&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"spinnerType\",\r\n    type: \"string\",\r\n    values: [\"waves\", \"default lighter\", \"svg\", \"rainbow\", \"lighter\"],\r\n    description: \"Spinner type.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default sm`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Sets Spinner size.\"\r\n  },\r\n  {\r\n    name: \"isCentered\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description:\r\n      \"When this prop is turned on, it fixed the spinner in the middle of the screen.\"\r\n  },\r\n  {\r\n    name: \"shadows\",\r\n    type: \"bool\",\r\n    values: [\"default true\"],\r\n    description: \"Adds a shadows around the Spinner.\"\r\n  }\r\n];\r\n\r\nconst spinnersProps = {\r\n  componentText,\r\n  importType,\r\n  propsDescription,\r\n  spinnerProps,\r\n  subTitle\r\n};\r\n\r\nexport default spinnersProps;\r\n","const subTitle = \"Spinner svg\";\r\nconst importType = `import Spinner from \"kromac-ui/dist/Spinner\";`;\r\nconst notes = `\r\n<p> Soon you could be allowed to send a svg you want in a property. </p>\r\n`;\r\n\r\nconst spinnerProps = {\r\n  spinnerType: \"svg\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Spinner </span>\r\n      <span className=\"var\">\r\n        spinnerType\r\n      </span>=<span className=\"string\">\"svg\"</span>\r\n      <span className=\"react\"> /&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"spinnerType\",\r\n    type: \"string\",\r\n    values: [\"svg\", \"default lighter\", \"waves\", \"rainbow\", \"lighter\"],\r\n    description: \"Spinner type.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default sm`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Sets Spinner size.\"\r\n  },\r\n  {\r\n    name: \"color\",\r\n    type: \"string\",\r\n    values: [\"default #fff\"],\r\n    description: \"Set background inner color.\"\r\n  },\r\n  {\r\n    name: \"bgColor\",\r\n    type: \"string\",\r\n    values: [\"default #000\"],\r\n    description: \"Sets background color Spinner.\"\r\n  },\r\n  {\r\n    name: \"fontColor\",\r\n    type: \"string\",\r\n    values: [\"default #fff\"],\r\n    description: \"Sets the font color of the dots (smoke).\"\r\n  },\r\n  {\r\n    name: \"isCentered\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description:\r\n      \"When this prop is turned on, it fixed the spinner in the middle of the screen.\"\r\n  },\r\n  {\r\n    name: \"shadows\",\r\n    type: \"bool\",\r\n    values: [\"default true\"],\r\n    description: \"This prop added a shadows around the Spinner.\"\r\n  }\r\n];\r\n\r\nconst spinnersProps = {\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  spinnerProps,\r\n  subTitle\r\n};\r\n\r\nexport default spinnersProps;\r\n","const subTitle = \"Spinner rainbow\";\r\nconst importType = `import Spinner from \"kromac-ui/dist/Spinner\";`;\r\nconst notes = `\r\nWhen the <div class=\"chip\">isCentered</div> prop is turned on, the\r\n<div class=\"chip\">size</div> prop will not work.\r\n`;\r\nconst spinnerProps = {\r\n  spinnerType: \"rainbow\"\r\n};\r\n\r\nconst componentText = (\r\n  <div className=\"implementation kromac-scroll-bg-dark\">\r\n    <p>\r\n      <span className=\"react\">&lt;Spinner </span>\r\n      <span className=\"var\">\r\n        spinnerType\r\n      </span>=<span className=\"string\">\"rainbow\"</span>\r\n      <span className=\"react\"> /&gt;</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst propsDescription = [\r\n  {\r\n    name: \"spinnerType\",\r\n    type: \"string\",\r\n    values: [\"rainbow\", \"default lighter\", \"svg\", \"waves\", \"lighter\"],\r\n    description: \"Spinner type.\"\r\n  },\r\n  {\r\n    name: \"size\",\r\n    type: \"string\",\r\n    values: [`default sm`, \"sm\", \"md\", \"lg\"],\r\n    description: \"Sets Spinner size.\"\r\n  },\r\n  {\r\n    name: \"bgColor\",\r\n    type: \"string\",\r\n    values: [],\r\n    description: \"Sets background color inside the Spinner.\"\r\n  },\r\n  {\r\n    name: \"isCentered\",\r\n    type: \"bool\",\r\n    values: [`default false`],\r\n    description:\r\n      \"When this prop is turned on, it fixed the spinner in the middle of the screen.\"\r\n  }\r\n];\r\n\r\nconst spinnersProps = {\r\n  componentText,\r\n  importType,\r\n  notes,\r\n  propsDescription,\r\n  spinnerProps,\r\n  subTitle\r\n};\r\n\r\nexport default spinnersProps;\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport spinnerLighterProps from \"./storyProps/spinnerLighterProps\";\r\nimport spinnerWavesProps from \"./storyProps/spinnerWavesProps\";\r\nimport spinnerSvgProps from \"./storyProps/spinnerSvgProps\";\r\nimport spinnerRainbowProps from \"./storyProps/spinnerRainbowProps\";\r\nimport {\r\n  changeDocumentTitle,\r\n  getComponentsRelated\r\n} from \"../../../utils/utils\";\r\n\r\nconst Preview = lazy(() => import(\"../../Preview\"));\r\nconst Spinner = lazy(() => import(\"./Spinner\"));\r\nconst SpinnerLoader = lazy(() => import(\"../../lib/Spinner\"));\r\n\r\nconst spinnerComponents = getComponentsRelated(\"spinner\");\r\n\r\nconst spinnerToShow = spinnerType => {\r\n  switch (spinnerType) {\r\n    case \"waves\":\r\n      return spinnerWavesProps;\r\n    case \"svg\":\r\n      return spinnerSvgProps;\r\n    case \"rainbow\":\r\n      return spinnerRainbowProps;\r\n    default:\r\n      return spinnerLighterProps;\r\n  }\r\n};\r\n\r\nconst SpinnerHistory = ({ location: { state = \"lighter\" } }) => {\r\n  useEffect(\r\n    () => {\r\n      document.title = changeDocumentTitle({ component: \"Spinner\", state });\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [state]\r\n  );\r\n  const spinnerProps = spinnerToShow(state);\r\n  return (\r\n    <div>\r\n      <Preview\r\n        title=\"Spinner\"\r\n        subTitle={spinnerProps.subTitle}\r\n        description={spinnerProps.description}\r\n        importType={spinnerProps.importType}\r\n        propsDescription={spinnerProps.propsDescription}\r\n        notes={spinnerProps.notes}\r\n        componentsRealated={spinnerComponents}\r\n      >\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"center\">\r\n              <h4>Loading implementation</h4>\r\n              <SpinnerLoader />\r\n            </div>\r\n          }\r\n        >\r\n          <Spinner\r\n            spinnersProps={spinnerProps.spinnerProps}\r\n            componentText={spinnerProps.componentText}\r\n          />\r\n        </Suspense>\r\n      </Preview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpinnerHistory;\r\n"],"sourceRoot":""}