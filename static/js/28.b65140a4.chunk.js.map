{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/lib/Gallery/GalleryPolygon/GalleryPolygon.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Row","lazy","Col","Skeleton","GalleryPolygon","props","useState","isViewImage","setIsViewImage","itemActive","setItemActive","isImgLoading","setIsImgLoading","images","imageFitPosition","polygonType","isActive","data","rowColMaker","isViewStyleKromacCol","row","item","close","e","preventDefault","className","style","map","imgs","image","col","sm","md","lg","markAsLastImageImgPar","markTypeRow","markAsOnlyImageRowImpar","onClick","handleViewImage","width","height","src","alt","objectPosition","onLoad"],"mappings":"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","file":"static/js/28.b65140a4.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { lazy, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport {\r\n  markTypeRow,\r\n  markAsLastImageImgPar,\r\n  markAsOnlyImageRowImpar,\r\n  rowColMaker\r\n} from \"../../../../utils/utils\";\r\n// import \"./GalleryPolygon.scss\";\r\nimport \"../../../../css/GalleryPolygon.css\"\r\n\r\nconst Row = lazy(() => import(\"react-bootstrap/Row\"));\r\nconst Col = lazy(() => import(\"react-bootstrap/Col\"));\r\nconst Skeleton = lazy(() => import(\"../../Skeleton\"));\r\n\r\nconst GalleryPolygon = props => {\r\n  const [isViewImage, setIsViewImage] = useState(false);\r\n  const [itemActive, setItemActive] = useState({});\r\n  const [isImgLoading, setIsImgLoading] = useState(true);\r\n  const {\r\n    images = [],\r\n    imageFitPosition = \"center\",\r\n    polygonType = \"rhombus\"\r\n  } = props;\r\n  const isActive = isViewImage ? \"active\" : \"\";\r\n  const data = rowColMaker(images);\r\n\r\n  const isViewStyleKromacCol = ({ row, item }) => {\r\n    if (itemActive && itemActive.row === row && itemActive.item === item) {\r\n      return \"active\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handleViewImage = ({ row, item }) => {\r\n    setItemActive({ row, item });\r\n    setIsViewImage(true);\r\n  };\r\n\r\n  const close = e => {\r\n    e.preventDefault();\r\n    setItemActive({});\r\n    setIsViewImage(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"kromac-gallery\">\r\n      <div\r\n        className={`kromac-gallery-polygon container`}\r\n        style={{ \"--totalRows\": data.length }}\r\n      >\r\n        <Row className=\"kromac-row\">\r\n          <span className={`bgblur ${isActive}`} />\r\n          {data.map((imgs, row) =>\r\n            imgs.map((image, col) =>\r\n              <Col\r\n                sm={12}\r\n                md={4}\r\n                lg={4}\r\n                key={col}\r\n                className={`kromac-col ${polygonType} ${markAsLastImageImgPar(\r\n                  row,\r\n                  col\r\n                )} ${isViewStyleKromacCol({\r\n                  row,\r\n                  item: col,\r\n                  itemActive\r\n                })} ${markTypeRow(row, col)} ${markAsOnlyImageRowImpar(\r\n                  imgs.length\r\n                )}`}\r\n                style={{ \"--rowNumber\": row }}\r\n              >\r\n                <div\r\n                  className={`kromac-gallery ${isViewStyleKromacCol({\r\n                    row,\r\n                    item: col,\r\n                    itemActive\r\n                  })}`}\r\n                >\r\n                  <button onClick={close} className=\"close\">\r\n                    <ion-icon name=\"close-circle-outline\" />\r\n                  </button>\r\n                  <div className=\"brillo\" />\r\n                  <div\r\n                    className=\"kromac-gallery-image\"\r\n                    onClick={() => handleViewImage({ row: row, item: col })}\r\n                  >\r\n                    {isImgLoading\r\n                      ? <Skeleton width=\"100%\" height=\"100%\" />\r\n                      : <p>Rendering image please wait</p>}\r\n                    <img\r\n                      src={image}\r\n                      alt=\"GalleryPolygon\"\r\n                      style={{ objectPosition: imageFitPosition }}\r\n                      onLoad={() => setIsImgLoading(false)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            )\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGalleryPolygon.propTypes = exact({\r\n  galleryType: PropTypes.string,\r\n  images: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  imageFitPosition: PropTypes.string,\r\n  polygonType: PropTypes.oneOf([\"rhombus\", \"hexagon\", \"rabbet\"])\r\n});\r\n\r\nexport default GalleryPolygon;\r\n"],"sourceRoot":""}