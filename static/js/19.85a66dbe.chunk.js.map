{"version":3,"sources":["components/lib/Slider/Slider.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/lib/Skeleton/Skeleton.js","components/lib/Spinner/components/SpinnerRainbow/SpinnerRainbow.js","components/lib/Spinner/components/SpinnerSVG/SpinnerSVG.js","components/lib/Spinner/components/SpinnerLighter/SpinnerLighter.js","components/lib/Spinner/components/SpinnerWaves/SpinnerWaves.js","components/lib/Spinner/Spinner.js"],"names":["Slider","props","useState","counter","setCounter","isImgLoading","setIsImgLoading","images","height","showPreview","autoPlay","timer","style","nroItems","length","useEffect","count","handlerTimeout","setTimeout","clearTimeout","className","onClick","e","preventDefault","src","inactivateIonIcon","paddingRight","alt","paddingLeft","map","image","index","transform","Spinner","onLoad","Skeleton","width","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","borderRadius","styleSkeleton","spanGenerator","loops","spans","SpinnerRainbow","size","bgColor","isCentered","styleCentered","SpinnerSVG","color","fontColor","shadows","isShadows","background","SpinnerLighter","bgColorInside","SpinnerWaves","spinnerType"],"mappings":"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","file":"static/js/19.85a66dbe.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { inactivateIonIcon } from \"../../../utils/utils\";\r\nimport Skeleton from \"../Skeleton\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst adder = count => {\r\n  return count++;\r\n};\r\n\r\nconst Slider = props => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [isImgLoading, setIsImgLoading] = useState(true);\r\n\r\n  const {\r\n    images = [],\r\n    height = \"500px\",\r\n    showPreview = false,\r\n    autoPlay = false,\r\n    timer = 5\r\n  } = props;\r\n  const actualHeight = height === \"auto\" ? \"500px\" : height;\r\n  const style = { height: actualHeight, \"--left\": counter };\r\n  const nroItems = images.length - 1;\r\n\r\n  const handleChangeLeft = e => {\r\n    e.preventDefault();\r\n    setCounter(() => {\r\n      if (counter <= 0) {\r\n        return nroItems;\r\n      }\r\n      return counter - 1;\r\n    });\r\n  };\r\n\r\n  const handleChangeRight = e => {\r\n    e.preventDefault();\r\n    setCounter(() => {\r\n      if (counter >= nroItems) {\r\n        return 0;\r\n      }\r\n      return counter + 1;\r\n    });\r\n  };\r\n\r\n  const handleClick = key => {\r\n    setCounter(key);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (counter === 0) {\r\n        setCounter(adder(counter));\r\n      }\r\n      if (counter > nroItems) {\r\n        setCounter(0);\r\n      }\r\n      const handlerTimeout = setTimeout(() => {\r\n        if (autoPlay) {\r\n          setCounter(counter + 1);\r\n        }\r\n      }, timer * 1000);\r\n\r\n      return () => {\r\n        clearTimeout(handlerTimeout);\r\n      };\r\n    },\r\n    [counter, nroItems, timer, autoPlay]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"kromac-slider\">\r\n        <div className=\"separators\">\r\n          <span onClick={handleChangeLeft}>\r\n            <img\r\n              src=\"https://res.cloudinary.com/dxg9gszax/image/upload/v1634082826/kromac-ui/arrow-left_pu25qv.svg\"\r\n              style={{\r\n                ...inactivateIonIcon(counter, \"left\", nroItems),\r\n                paddingRight: \"5px\"\r\n              }}\r\n              alt=\"left\"\r\n            />\r\n          </span>\r\n          <span onClick={handleChangeRight}>\r\n            <img\r\n              src=\"https://res.cloudinary.com/dxg9gszax/image/upload/v1634082826/kromac-ui/arrow-right_ksufka.svg\"\r\n              style={{\r\n                ...inactivateIonIcon(counter, \"right\", nroItems),\r\n                paddingLeft: \"5px\"\r\n              }}\r\n              alt=\"right\"\r\n            />\r\n          </span>\r\n        </div>\r\n        {showPreview &&\r\n          <div className=\"kromac-slider-preview\">\r\n            {images.map((image, index) =>\r\n              <div\r\n                key={index}\r\n                className={`kromac-slide-preview center`}\r\n                onClick={() => handleClick(index)}\r\n              >\r\n                {isImgLoading &&\r\n                  <div style={{ transform: \"scale(.2)\" }}>\r\n                    <Spinner />\r\n                  </div>}\r\n                <img\r\n                  src={image}\r\n                  alt=\"slider\"\r\n                  onLoad={() => setIsImgLoading(false)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>}\r\n        <div className=\"kromac-slider-container\" style={style}>\r\n          {images.map((image, index) =>\r\n            <div key={index} className={`kromac-slide center`}>\r\n              {isImgLoading && <Skeleton width=\"100%\" height=\"100%\" />}\r\n              <img\r\n                src={image}\r\n                alt=\"slider\"\r\n                onLoad={() => setIsImgLoading(false)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlider.propTypes = exact({\r\n  images: PropTypes.arrayOf(PropTypes.string),\r\n  height: PropTypes.string,\r\n  showPreview: PropTypes.bool,\r\n  autoPlay: PropTypes.bool,\r\n  timer: PropTypes.number\r\n});\r\n\r\nexport default Slider;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\n\r\nconst Skeleton = ({\r\n  height = \"32px\",\r\n  width = \"100%\",\r\n  borderRadius = \"none\",\r\n  className = \"light\"\r\n}) => {\r\n  const styleSkeleton = {\r\n    height,\r\n    width,\r\n    borderRadius\r\n  };\r\n  return (\r\n    <div className={`kromac-skeleton ${className}`} style={styleSkeleton}>\r\n      <div className={`kromac-skeletonLoader ${className}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSkeleton.propTypes = exact({\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n  borderRadius: PropTypes.string,\r\n  className: PropTypes.oneOf([\"light\", \"dark\"])\r\n});\r\n\r\nexport default Skeleton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerRainbow = props => {\r\n  const { size = \"sm\", bgColor = \"#fff\", isCentered = false } = props;\r\n\r\n  const style = {\r\n    \"--bgSpiner\": bgColor\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-rainbown ${size}`}\r\n      style={{ ...style, ...styleCentered(isCentered) }}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(5)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerRainbow.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  bgColor: PropTypes.string,\r\n  isCentered: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerRainbow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerSVG = props => {\r\n  const {\r\n    size = \"sm\",\r\n    color = \"#fff\",\r\n    bgColor = \"#000\",\r\n    fontColor = \"#fff\",\r\n    isCentered = false,\r\n    shadows = true\r\n  } = props;\r\n\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n  const style = {\r\n    background: bgColor,\r\n    \"--bgSpiner\": color,\r\n    \"--loaderColor\": fontColor\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-svg ${size} ${isShadows}`}\r\n      style={{ ...style, ...styleCentered(isCentered) }}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(20)}\r\n        <div className=\"rocket\">\r\n          <img\r\n            src=\"https://res.cloudinary.com/dxg9gszax/image/upload/v1634079842/kromac-ui/rocket_grqgxg.svg\"\r\n            alt=\"rocket\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerSVG.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  color: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  isCentered: PropTypes.bool,\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerSVG;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst SpinnerLighter = props => {\r\n  const {\r\n    size = \"sm\",\r\n    isCentered = false,\r\n    shadows = true,\r\n    bgColorInside = \"#fff\"\r\n  } = props;\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-lighter ${size} ${isShadows}`}\r\n      style={styleCentered(isCentered)}\r\n    >\r\n      <div className=\"loader\">\r\n        <span style={{ background: bgColorInside }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerLighter.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  isCentered: PropTypes.bool,\r\n  bgColorInside: PropTypes.oneOf([\"#fff\", \"#000\"]),\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerLighter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport exact from \"prop-types-exact\";\r\nimport { styleCentered } from \"../../../../../utils/utils\";\r\n\r\nconst spanGenerator = loops => {\r\n  const spans = [];\r\n  for (let i = 1; i <= loops; i++) {\r\n    var style = { \"--i\": i };\r\n    spans.push(<span key={i} style={style} />);\r\n  }\r\n  return spans;\r\n};\r\n\r\nconst SpinnerWaves = props => {\r\n  const { size = \"sm\", isCentered = false, shadows = true } = props;\r\n  const isShadows = shadows ? \"shadows\" : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`kromac-spinner spinner-waves ${size} ${isShadows}`}\r\n      style={styleCentered(isCentered)}\r\n    >\r\n      <div className=\"loader\">\r\n        {spanGenerator(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinnerWaves.propTypes = exact({\r\n  spinnerType: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  isCentered: PropTypes.bool,\r\n  shadows: PropTypes.bool\r\n});\r\n\r\nexport default SpinnerWaves;\r\n","import React from \"react\";\r\nimport SpinnerRainbow from \"./components/SpinnerRainbow\";\r\nimport SpinnerSVG from \"./components/SpinnerSVG\";\r\nimport SpinnerLighter from \"./components/SpinnerLighter\";\r\nimport SpinnerWaves from \"./components/SpinnerWaves\";\r\n\r\nconst Spinner = props => {\r\n  const { spinnerType } = props;\r\n  switch (spinnerType) {\r\n    case \"svg\":\r\n      return <SpinnerSVG {...props} />;\r\n    case \"rainbow\":\r\n      return <SpinnerRainbow {...props} />;\r\n    case \"waves\":\r\n      return <SpinnerWaves {...props} />;\r\n    default:\r\n      return <SpinnerLighter {...props} />;\r\n  }\r\n};\r\n\r\nexport default Spinner;\r\n"],"sourceRoot":""}